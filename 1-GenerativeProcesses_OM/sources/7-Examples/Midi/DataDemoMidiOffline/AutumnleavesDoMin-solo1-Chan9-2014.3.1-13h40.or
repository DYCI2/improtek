(in-package :om)(if (find-class (quote improvizer) nil) (make-instance (quote improvizer) :vectext (make-array 1000 :initial-contents (eval-my-list (quote (nil (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 67 218 106 105 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 68 42 123 97 1) (list 70 211 119 87 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -70 0 10 87 1) (list 71 15 133 100 1) (list 72 175 128 109 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 74 10 155 107 1) (list 75 219 116 108 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -75 0 59 108 1) (list 74 186 123 103 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 26 207 59 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 67 -81 75 27 1) (list 58 -69 58 32 1) (list 74 -59 176 93 1) (list 75 223 106 95 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -75 0 86 95 1)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 74 186 123 109 1)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 10 127 86 1) (list 74 163 102 104 1)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 75 -10 127 108 1) (list 73 159 128 89 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 74 -54 119 82 1) (list 73 48 127 71 1) (list 72 159 111 87 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 70 -38 101 89 1) (list 67 176 96 41 1) (list 69 186 53 39 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 -47 123 86 1) (list 63 119 111 109 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 -52 171 55 1) (list 60 129 101 66 1)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 -48 144 80 1) (list 63 123 128 100 1)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 -69 149 92 1) (list 67 128 181 81 1)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 -57 133 65 1) (list 65 108 106 109 1)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 63 -75 191 61 1) (list 60 123 170 79 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 159 106 109 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 63 -20 133 68 1) (list 65 119 122 85 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 66 -63 214 88 1) (list 68 124 123 84 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 69 -63 112 100 1) (list 74 102 116 109 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 -28 123 56 1) (list 69 122 106 62 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 -53 123 101 1) (list 70 127 123 79 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 69 -38 101 80 1) (list 70 42 128 56 1) (list 69 148 133 63 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 67 -43 138 69 1) (list 69 164 101 90 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 70 -44 69 59 1) (list 69 20 123 59 1) (list 67 138 90 77 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 69 -61 117 102 1) (list 70 113 112 93 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 71 -73 139 56 1) (list 73 120 149 92 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 74 -51 101 87 1) (list 79 114 138 102 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 83 -45 149 105 1) (list 86 188 92 95 1) (list 74 188 76 114 1) (list 84 204 27 103 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 73 98 154 102 1) (list 85 103 213 97 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 -14 344 48 1) (list 84 -8 338 71 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -72 0 66 48 1) (list -84 0 113 71 1) (list 79 113 69 86 1) (list 75 193 107 102 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 -41 149 81 1) (list 74 -8 58 42 1) (list 70 151 123 102 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 67 -25 128 90 1) (list 65 140 139 66 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 63 -8 133 82 1) (list 65 125 47 60 1) (list 63 215 80 63 1)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 -23 154 69 1) (list 60 162 154 60 1)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -60 0 21 60 1)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 71 -27 170 106 1) (list 73 149 116 97 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 74 -41 102 108 1) (list 76 130 101 122 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 73 -67 112 93 1) (list 74 65 64 60 1) (list 73 184 84 49 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 71 -62 134 74 1) (list 70 136 159 89 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 140 134 104 1)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 73 -41 129 91 1) (list 75 130 101 91 1)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 -46 128 97 1) (list 73 113 112 71 1) (list 72 216 85 58 1)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 70 -3 154 78 1) (list 69 183 147 83 1)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -69 0 60 83 1) (list 63 183 75 65 1) (list 60 193 59 55 1) (list 57 204 48 46 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 75 209 117 119 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 74 45 123 73 1) (list 72 178 112 78 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 69 -14 128 58 1) (list 68 151 127 109 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 66 -12 171 59 1) (list 65 170 123 76 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 63 -16 112 97 1) (list 62 154 154 80 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 60 -11 159 74 1) (list 58 154 154 90 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 57 25 154 22 1) (list 59 41 106 38 1) (list 58 179 156 99 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -58 0 41 99 1) (list 60 45 107 61 1) (list 58 126 128 62 1) (list 55 210 90 74 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 57 4 139 91 1) (list 58 170 159 93 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 57 -22 123 73 1) (list 58 84 133 53 1) (list 57 196 127 44 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 55 -18 182 76 1) (list 57 184 145 74 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -57 0 84 74 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 67 142 111 117 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 68 -35 106 97 1) (list 69 121 133 103 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 -65 139 85 1) (list 69 51 64 75 1) (list 63 163 123 90 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 60 -55 91 94 1) (list 62 62 96 89 1) (list 63 169 86 94 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 -48 106 84 1) (list 66 58 117 102 1) (list 68 186 106 104 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 69 -32 111 94 1) (list 71 95 123 104 1) (list 72 181 90 48 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 74 -21 122 106 1) (list 75 106 221 111 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -75 0 335 111 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -75 0 141 111 1) (list 74 168 112 94 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 -88 123 97 1) (list 70 -3 159 107 1) (list 72 183 119 115 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 74 -3 129 108 1) (list 70 162 166 91 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 69 -25 176 82 1) (list 67 168 143 79 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 66 -30 166 97 1) (list 69 156 160 104 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 67 -18 164 80 1) (list 62 173 157 76 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -62 0 13 76 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 67 204 86 99 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 70 8 208 94 1) (list 67 194 43 79 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 74 -14 144 113 1) (list 73 161 112 105 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 -8 149 95 1) (list 74 161 112 108 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 -31 145 78 1) (list 70 156 91 83 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 -46 159 103 1) (list 70 146 123 84 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 69 -30 143 89 1) (list 70 130 181 112 1)) :duration 330 :data nil :harmlabel (list (quote c) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 69 -31 145 63 1) (list 67 141 106 93 1)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 69 -62 144 106 1) (list 67 97 144 70 1)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 -89 117 84 1) (list 67 12 112 65 1) (list 65 108 90 82 1)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 63 -73 133 90 1) (list 62 108 117 102 1) (list 63 215 115 87 1)) :duration 330 :data nil :harmlabel (list (quote f) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -63 0 12 87 1) (list 62 -31 149 69 1) (list 61 102 117 79 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 -98 159 36 1) (list 63 93 128 92 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 65 -94 153 87 1) (list 67 82 153 98 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 69 -69 138 114 1) (list 70 117 137 111 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 -38 111 104 1) (list 74 123 122 102 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 75 -54 139 104 1) (list 77 111 143 95 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 79 -16 123 99 1) (list 77 16 69 32 1) (list 79 208 100 104 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 80 101 110 105 1)) :duration 330 :data nil :harmlabel (list (quote bb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 81 10 319 99 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -81 0 277 99 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 79 -81 85 81 1) (list 75 -12 107 110 1) (list 72 63 213 70 1)) :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 330 :data nil :harmlabel (list (quote a) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 69 163 91 93 1) (list 68 228 85 92 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 66 -86 116 108 1) (list 65 -1 111 93 1) (list 63 148 117 98 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 -32 144 63 1) (list 60 149 101 73 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 58 -39 176 95 1) (list 57 148 133 85 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 55 -27 357 77 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -55 0 37 77 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset nil :duration 330 :data nil :harmlabel (list (quote f\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 54 201 133 107 1)) :duration 330 :data nil :harmlabel (list (quote f\#) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -54 0 16 107 1) (list 53 6 101 81 1) (list 55 119 90 91 1)) :duration 330 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 56 -100 128 85 1) (list 58 12 68 92 1) (list 60 102 149 97 1)) :duration 330 :data nil :harmlabel (list (quote f) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 62 -99 101 103 1) (list 63 -8 116 99 1) (list 65 102 139 85 1) (list 67 215 121 100 1)) :duration 330 :data nil :harmlabel (list (quote e) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -67 0 2 100 1) (list 68 -19 101 104 1) (list 70 108 90 104 1) (list 72 215 116 96 1)) :duration 330 :data nil :harmlabel (list (quote e) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -72 0 28 96 1) (list 71 -80 49 16 1) (list 74 6 101 104 1) (list 75 96 102 90 1) (list 77 214 69 81 1)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 79 2 329 101 1)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -79 0 329 101 1)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list -79 0 220 101 1) (list 77 188 47 82 1)) :duration 330 :data nil :harmlabel (list (quote eb) (quote maj7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 75 -85 91 93 1) (list 74 6 143 89 1) (list 72 166 106 94 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 70 -9 144 104 1) (list 69 172 143 78 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 67 -31 138 84 1) (list 66 156 116 85 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 70 -16 164 98 1) (list 66 148 160 81 1)) :duration 330 :data nil :harmlabel (list (quote d) 7) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 67 -6 139 88 1) (list 69 159 116 108 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 70 -21 101 103 1) (list 71 148 86 60 1) (list 72 159 64 63 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 73 -22 149 104 1) (list 76 153 134 69 1) (list 74 180 76 31 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 79 -43 122 106 1) (list 83 116 91 109 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 74 -49 139 118 1) (list 86 -49 139 121 1) (list 86 176 122 67 1) (list 74 176 127 101 1) (list 84 206 43 53 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 78 -45 90 61 1) (list 85 125 171 118 1) (list 73 125 154 117 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 72 2 166 85 1) (list 84 2 139 90 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) (if (find-class (quote beat) nil) (make-instance (quote beat) :midiset (list (list 82 -9 159 90 1) (list 70 -4 159 84 1)) :duration 330 :data nil :harmlabel (list (quote g) (quote m7)) :relharmlabel nil :numbeat 1 :refharmlabel 1 :startphrase nil :qmidiset nil :qdivision 1 :density 1 :feature nil :from-file t)) nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :hashtransition (let ((hashtable (make-hash-table))) (loop for key in (list 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130) for val in (list (list 114 112 110 24 20 16 12 8 4 1) (list 110 68 4 2) (list 110 68 4 3) (list 68 31 4) (list 8 5) (list 8 6) (list 8 7) (list 8) (list 12 9) (list 12 10) (list 12 11) (list 12) (list 100 16 13) (list 100 16 14) (list 100 16 15) (list 100 96 16) (list 120 20 17) (list 120 20 18) (list 120 20 19) (list 120 20) (list 24 21) (list 24 22) (list 24 23) (list 24) (list 28 25) (list 28 26) (list 28 27) (list 28) (list 29) (list 110 30) (list 31) (list 68 36 32) (list 68 36 33) (list 68 36 34) (list 68 36 35) (list 68 36) (list 37) (list 38) (list 39) (list 40) (list 41) (list 42) (list 43) (list 44) (list 45) (list 46) (list 47) (list 96 48) (list 49) (list 50) (list 51) (list 52) (list 53) (list 54) (list 55) (list 56) (list 57) (list 58) (list 59) (list 60) (list 61) (list 62) (list 63) (list 64) (list 65) (list 66) (list 67) (list 68) (list 69) (list 70) (list 71) (list 72) (list 73) (list 74) (list 75) (list 76) (list 77) (list 78) (list 79) (list 80) (list 81) (list 82) (list 83) (list 84) (list 85) (list 86) (list 87) (list 88) (list 89) (list 90) (list 91) (list 92) (list 93) (list 94) (list 95) (list 96) (list 100 97) (list 100 98) (list 100 99) (list 100) (list 101) (list 102) (list 103) (list 104) (list 105) (list 106) (list 107) (list 108) (list 109) (list 110) (list 112 111) (list 112) (list 114 113) (list 114) (list 116 115) (list 116) (list 117) (list 118) (list 119) (list 120) (list 121) (list 122) (list 123) (list 124) (list 125) (list 126) (list 127) (list 128) (list 129) (list 130) (list 131)) do (sethash hashtable key val)) hashtable) :hashsuppl (let ((hashtable (make-hash-table))) (loop for key in (list 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131) for val in (list -1 0 1 2 0 4 5 6 0 8 9 10 0 12 13 14 0 16 17 18 0 20 21 22 0 24 25 26 1 2 3 3 31 32 33 34 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 15 96 97 98 20 21 22 23 24 25 26 27 28 29 0 110 0 112 0 114 16 17 18 19 24 25 26 27 28 29 30 31 32 33 34 35) do (sethash hashtable key val)) hashtable) :hashsuppl-> (let ((hashtable (make-hash-table))) (loop for key in (list 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 96 18 97 19 98 20 21 22 23 24 -1 25 26 27 28 29 30 31 110 32 33 112 34 35 114 36 37 38 39 40 41 42 43 44 45 46 47) for val in (list 114 28 29 31 36 37 38 39 40 41 42 43 44 45 46 96 116 117 97 118 98 119 99 100 101 102 103 120 0 121 122 123 124 125 126 127 111 128 129 113 130 131 115 84 85 86 87 88 89 90 91 92 93 94 95) do (sethash hashtable key val)) hashtable) :veclrs (make-array 1000 :initial-contents (eval-my-list (quote (nil 0 1 2 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 0 1 2 3 1 2 3 3 4 5 6 7 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 4 5 6 7 1 2 3 4 5 6 7 8 9 10 0 1 0 1 0 1 1 2 3 4 1 2 3 4 5 6 7 8 9 10 11 12 nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :maxetat 131 :lrsmode (quote t) :comparateur (quote compareevents) :name (make-array 10 :initial-contents (eval-my-list (quote (#\i #\m #\p #\r #\o #\v #\i #\z #\e #\r)))) :context nil :continuity 127 :navigationmode (quote continuity) :currentstateidx 131 :prevstateidx 130 :max-continuity 1000 :start-region (list 0 131) :fwsuffix (quote t) :bwsuffix (quote t) :bestsuffixmode nil :useestrada nil :usehindemith nil :refharmgrid nil :harmgridlength 48 :beats/measure 4 :reftempo 330 :currenttranspo 0 :lengthfactorsfromgrid (list 1 100) :besttranspomode (quote t) :firstwithouttranspomode nil :authorizedtranspos (list -4 -3 -2 -1 1 2 3 4) :randomprefixoccurrencemode nil :tabou-mode nil :tabou (let ((hashtable (make-hash-table))) (loop for key in (list 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131) for val in (list (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t) (quote t)) do (sethash hashtable key val)) hashtable) :feature nil :hashlabeltranspo (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :from-file t))