; OM File Header - Saved 2016/04/05 18:30:31
; (6.090012 :patc (om-make-point 40 40) (om-make-point 50 50) (om-make-point 500 400) "" 183 0 nil nil)
; End File Header
; External resources 
; (list (list (quote :abstraction) "#P\"../Help/stored scenarios.omp\"" "#P\"../Help/Reactive Parameters.omp\"" "#P\"../Help/output functions.omp\""))
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "rent party" (quote ((let ((box (om-load-boxcall (quote lispfun) "SUPERLOW-CONTINUITY" (quote superlow-continuity) (quote ((om-load-inputfun (quote input-funbox) "SELF" "SELF" nil))) (om-make-point 1147 498) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "SUPERLOW-CONTINUITY" (quote superlow-continuity) (quote ((om-load-inputfun (quote input-funbox) "SELF" "SELF" nil))) (om-make-point 851 500) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "PAST-AND-FUTURE" (quote past-and-future) (quote ((om-load-inputfun (quote input-funbox) "SELF" "SELF" nil))) (om-make-point 1090 588) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "PAST-AND-FUTURE" (quote past-and-future) (quote ((om-load-inputfun (quote input-funbox) "SELF" "SELF" nil))) (om-make-point 770 594) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "ONLY-PAST" (quote only-past) (quote ((om-load-inputfun (quote input-funbox) "SELF" "SELF" nil))) (om-make-point 1014 588) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "ONLY-PAST" (quote only-past) (quote ((om-load-inputfun (quote input-funbox) "SELF" "SELF" nil))) (om-make-point 700 594) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 393 107) (quote "07.07.15.15 :  sature$00.00-16-09-22 : bien, mou, trous vites$07.08-17-17-13 : bien, cause beaucoup, son moche* $07.08-17-27-06 : bien, trous début, son moche$07.08-17-38-33 : bien, cause beaucoup, son très moche$07.08-17-52-13 : bien, cause beaucoup, son moche* ") "" (om-make-point 832 1) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote patch-box) "stored scenarios" (quote ("elements" "Help" "stored scenarios")) (quote nil) (om-make-point 692 0) nil nil nil nil 0))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote patch-box) "Reactive Parameters" (quote ("elements" "Help" "Reactive Parameters")) (quote nil) (om-make-point 12 703) nil nil nil nil 0))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote patch-box) "output functions 2" (quote ("elements" "Help" "output functions")) (quote nil) (om-make-point 439 353) nil nil nil nil 0))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 2" (om-make-point 225 51) (quote "Chosen/designed reactive parameters (examples)") "" (om-make-point 194 563) nil (om-make-color 0 0 0) (om-make-font "Verdana" 14.0 :family "Verdana" :style (quote (:bold)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 1018 179) (om-make-point 27 30) 1 "1" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "LOAD-MEMORY-HYBRID" (quote load-memory-hybrid) (quote ((om-load-inputfun (quote input-funbox) "TUNENAME" "TUNENAME" nil) (om-load-inputfun (quote input-funbox) "MULT" "MULT" nil) (om-load-inputfun (quote input-funbox) "BEATDUR" "BEATDUR" nil))) (om-make-point 966 223) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 707 179) (om-make-point 27 30) 1 "1" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "LOAD-MEMORY-HYBRID" (quote load-memory-hybrid) (quote ((om-load-inputfun (quote input-funbox) "TUNENAME" "TUNENAME" nil) (om-load-inputfun (quote input-funbox) "MULT" "MULT" nil) (om-load-inputfun (quote input-funbox) "BEATDUR" "BEATDUR" nil))) (om-make-point 655 223) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 235 178) (om-make-point 27 30) 1 "1" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "LOAD-MEMORY-HYBRID" (quote load-memory-hybrid) (quote ((om-load-inputfun (quote input-funbox) "TUNENAME" "TUNENAME" nil) (om-load-inputfun (quote input-funbox) "MULT" "MULT" nil) (om-load-inputfun (quote input-funbox) "BEATDUR" "BEATDUR" nil))) (om-make-point 183 223) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "UPDATE-CURRENT-PERF-INDEX" (quote update-current-perf-index) (quote ((om-load-inputfun (quote input-funbox) "SELF" "SELF" nil) (om-load-inputfun (quote input-funbox) "IDX" "IDX" 0))) (om-make-point 138 690) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box t)) box) (let ((box (om-load-boxcall (quote lispfun) "UPDATE-CURRENT-PERF-INDEX" (quote update-current-perf-index) (quote ((om-load-inputfun (quote input-funbox) "SELF" "SELF" nil) (om-load-inputfun (quote input-funbox) "IDX" "IDX" 0))) (om-make-point 612 690) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box t)) box) (let ((box (om-load-boxcall (quote abstraction) "Send3" (om-load-lisp-abspatch "Send3" 6.090012 ";;; Edit a valid LAMBDA EXPRESSION for \"lispfunction\"$;;; e.g. (lambda (arg1 arg2 ...) ( ... ))$$(lambda (seq index time handler target) $  (osc-send-sequence-fragment seq index \"127.0.0.1\" 7657 \"/modify\" 3)$)$$$") (quote ((om-load-inputfun (quote input-funbox) "" "SEQ" nil) (om-load-inputfun (quote input-funbox) "" "INDEX" nil) (om-load-inputfun (quote input-funbox) "" "TIME" nil) (om-load-inputfun (quote input-funbox) "" "HANDLER" nil) (om-load-inputfun (quote input-funbox) "" "TARGET" nil))) (om-make-point 1154 283) nil (list (list "dedee" "lapin")) "l" "Send3"))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "IMPROVISATION-HANDLER" (quote improvisation-handler) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "" "name" "Improvizer-Handler") (om-load-inputfun (quote input-funbox) "" "rtimprovizer" nil) (om-load-inputfun (quote input-funbox) "" "scenario" nil) (om-load-inputfun (quote input-funbox) "" "label-class" (quote label)) (om-load-inputfun (quote input-funbox) "" "output-fun" (quote output-sequence)) (om-load-inputfun (quote input-funbox) "" "epsilon" 5) (om-load-inputfun (quote input-funbox) "" "target-object" nil))) (om-make-point 946 349) (om-make-point 240 144) (if (find-class (quote improvisation-handler) nil) (make-instance (quote improvisation-handler) :name "Improvizer-Handler" :rtimprovizer (if (find-class (quote realtimeimprovizer) nil) (make-instance (quote realtimeimprovizer) :vectext (make-array 1000 :initial-contents (eval-my-list (quote (nil (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote f) :chordtype (quote rien3) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 0 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote f) :chordtype (quote rien3) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 1 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote f) :chordtype (quote rien3) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 2 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype (quote deb) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 3 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 4 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 5 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 6 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 7 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 8 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 9 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 10 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 11 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 12 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 13 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 14 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 15 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 16 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 17 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 18 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 19 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 20 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 21 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 22 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 23 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 24 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 25 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 26 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 27 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 28 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 29 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 30 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 31 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 32 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 33 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 34 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 35 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 36 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 37 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 38 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 39 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 40 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 41 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 42 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 43 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 44 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 45 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 46 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 47 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 48 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 49 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 50 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 51 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 52 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 53 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 54 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 55 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 56 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 57 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 58 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 59 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 60 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 61 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 62 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 63 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 64 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 65 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 66 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 67 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 68 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 69 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 70 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 71 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 72 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 73 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 74 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 75 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 76 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 77 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 78 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 79 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 80 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 81 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 82 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 83 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 84 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 85 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 86 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 87 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 88 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 89 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 90 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 91 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 92 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 93 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 94 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 95 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 96 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 97 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 98 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 99 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 100 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 101 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 102 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 103 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 104 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 105 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 106 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 107 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 108 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 109 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 110 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 111 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 112 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 113 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 114 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 115 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 116 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 117 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 118 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 119 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 120 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 121 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 122 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 123 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 124 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 125 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 126 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 127 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 128 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 129 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 130 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 131 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 132 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 133 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 134 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 135 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 136 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 137 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 138 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 139 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 140 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 141 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 142 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 143 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 144 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 145 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 146 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 147 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 148 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 149 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 150 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 151 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 152 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 153 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 154 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 155 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 156 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 157 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 158 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 159 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 160 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 161 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 162 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 163 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 164 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 165 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 166 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 167 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 168 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 169 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 170 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 171 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 172 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 173 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 174 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 175 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 176 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 177 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 178 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 179 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 180 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 181 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 182 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 183 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 184 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 185 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 186 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 187 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7final) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 188 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7final) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 189 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype (quote 7final) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 190 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype (quote 7final) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 191 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote f) :chordtype (quote rien3) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 192 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote f) :chordtype (quote rien3) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 193 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote f) :chordtype (quote rien3) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 194 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype (quote deb) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 195 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 196 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 197 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 198 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 199 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 200 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 201 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 202 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 203 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 204 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 205 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 206 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 207 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 208 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 209 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 210 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 211 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 212 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 213 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 214 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 215 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 216 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 217 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 218 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 219 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 220 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 221 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 222 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 223 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 224 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 225 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 226 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 227 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 228 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 229 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 230 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 231 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 232 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 233 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 234 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 235 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 236 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 237 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 238 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 239 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 240 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 241 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 242 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 243 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 244 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 245 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 246 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 247 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 248 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 249 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 250 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 251 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 252 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 253 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 254 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 255 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 256 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 257 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 258 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 259 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 260 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 261 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 262 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 263 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 264 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 265 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 266 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 267 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 268 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 269 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 270 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 271 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 272 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 273 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 274 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 275 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 276 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 277 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 278 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 279 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 280 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 281 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 282 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 283 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 284 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 285 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 286 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 287 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 288 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 289 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 290 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 291 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 292 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 293 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 294 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 295 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 296 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 297 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 298 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 299 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 300 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 301 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 302 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 303 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 304 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 305 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 306 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 307 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 308 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 309 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 310 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 311 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 312 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 313 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 314 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 315 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 316 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 317 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 318 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 319 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 320 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 321 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 322 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 323 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 324 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 325 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 326 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 327 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 328 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 329 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 330 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 331 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 332 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 333 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 334 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 335 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 336 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 337 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 338 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 339 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 340 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 341 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 342 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 343 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 344 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 345 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 346 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 347 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 348 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 349 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 350 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 351 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 352 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 353 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 354 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 355 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 356 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 357 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 358 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 359 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 360 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 361 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 362 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 363 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 364 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 365 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 366 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 367 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 368 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 369 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 370 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 371 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 372 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 373 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 374 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 375 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 376 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 377 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 378 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 379 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7final) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 380 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7final) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 381 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype (quote 7final) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 382 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype (quote 7final) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 383 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote f) :chordtype (quote rien3) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 384 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote f) :chordtype (quote rien3) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 385 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote f) :chordtype (quote rien3) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 386 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype (quote deb) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 387 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 388 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 389 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 390 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 391 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 392 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 393 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 394 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 395 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 396 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 397 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 398 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 399 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 400 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 401 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 402 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 403 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 404 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 405 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 406 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 407 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 408 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 409 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 410 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 411 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 412 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 413 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 414 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 415 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 416 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 417 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 418 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 419 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 420 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 421 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 422 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 423 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 424 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 425 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 426 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 427 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 428 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 429 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 430 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 431 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 432 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 433 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 434 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 435 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 436 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 437 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 438 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 439 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 440 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 441 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 442 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 443 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 444 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 445 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 446 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 447 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 448 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 449 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 450 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 451 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 452 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 453 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 454 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 455 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 456 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 457 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 458 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 459 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 460 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 461 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 462 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 463 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 464 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 465 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 466 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 467 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 468 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 469 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 470 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 471 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 472 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 473 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 474 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 475 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 476 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 477 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 478 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 479 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 480 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 481 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 482 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 483 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 484 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 485 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 486 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 487 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 488 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 489 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 490 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 491 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 492 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 493 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 494 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 495 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 496 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 497 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 498 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 499 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 500 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 501 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 502 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 503 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 504 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 505 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 506 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 507 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 508 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 509 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 510 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 511 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 512 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 513 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 514 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 515 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 516 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 517 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 518 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 519 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 520 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 521 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 522 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 523 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 524 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 525 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 526 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 527 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 528 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 529 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 530 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 531 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 532 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 533 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 534 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 535 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 536 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 537 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 538 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 539 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 540 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 541 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 542 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 543 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 544 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 545 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 546 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 547 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 548 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 549 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 550 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 551 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 552 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 553 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 554 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 555 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 556 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 557 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 558 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 559 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 560 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 561 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 562 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 563 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 564 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 565 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 566 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 567 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 568 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 569 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 570 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 571 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7final) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 572 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7final) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 573 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype (quote 7final) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 574 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype (quote 7final) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 575 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote f) :chordtype (quote rien3) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 576 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote f) :chordtype (quote rien3) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 577 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote f) :chordtype (quote rien3) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 578 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype (quote deb) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 579 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 580 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 581 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 582 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 583 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 584 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 585 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 586 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 587 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 588 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 589 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 590 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 591 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 592 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 593 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 594 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 595 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 596 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 597 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 598 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 599 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 600 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 601 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 602 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 603 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 604 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 605 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 606 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 607 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 608 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 609 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 610 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 611 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 612 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 613 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 614 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 615 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 616 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 617 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 618 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 619 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 620 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 621 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 622 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 623 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 624 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 625 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 626 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 627 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 628 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 629 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 630 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 631 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 632 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 633 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 634 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 635 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 636 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 637 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 638 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 639 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 640 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 641 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 642 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 643 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 644 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 645 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 646 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 647 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 648 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 649 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 650 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 651 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 652 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 653 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 654 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 655 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 656 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 657 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 658 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 659 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 660 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 661 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 662 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 663 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 664 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 665 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 666 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 667 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 668 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 669 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 670 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 671 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 672 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 673 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 674 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 675 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 676 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 677 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 678 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 679 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 680 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 681 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 682 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 683 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 684 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 685 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 686 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 687 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 688 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 689 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 690 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 691 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 692 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 693 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 694 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 695 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 696 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 697 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 698 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 699 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 700 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 701 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 702 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 703 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 704 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 705 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 706 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 707 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 708 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 709 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 710 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 711 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 712 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 713 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 714 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 715 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 716 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 717 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 718 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 719 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 720 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 721 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 722 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 723 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 724 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 725 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 726 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 727 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 728 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 729 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 730 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 731 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 732 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 733 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 734 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 735 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 736 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 737 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 738 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 739 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 740 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 741 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 742 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 743 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 744 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 745 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 746 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 747 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 748 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 749 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 750 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 751 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 752 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 753 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 754 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 755 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 756 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 757 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 758 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 759 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 760 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 761 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 762 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 763 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7final) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 764 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7final) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 765 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype (quote 7final) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 766 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype (quote 7final) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 767 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :hashtransition (let ((hashtable (make-hash-table))) (loop for key in (listfor val in (list (list 191 189 9 7 5 4 1) (list 4 2) (list 4 3) (list 4) (list 5) (list 7 6) (list 7) (list 189 13 9 8) (list 189 13 9) (list 11 10) (list 11) (list 12) (list 189 13) (list 14) (list 15) (list 16) (list 17) (list 18) (list 19) (list 20) (list 189 21) (list 22) (list 23) (list 24) (list 25) (list 26) (list 27) (list 28) (list 189 29) (list 30) (list 31) (list 32) (list 33) (list 34) (list 35) (list 36) (list 189 37) (list 38) (list 39) (list 40) (list 41) (list 42) (list 43) (list 44) (list 189 45) (list 46) (list 47) (list 48) (list 49) (list 50) (list 51) (list 52) (list 189 53) (list 54) (list 55) (list 56) (list 57) (list 58) (list 59) (list 60) (list 189 61) (list 62) (list 63) (list 64) (list 65) (list 66) (list 67) (list 68) (list 189 69) (list 70) (list 71) (list 72) (list 73) (list 74) (list 75) (list 76) (list 189 77) (list 78) (list 79) (list 80) (list 81) (list 82) (list 83) (list 84) (list 189 85) (list 86) (list 87) (list 88) (list 89) (list 90) (list 91) (list 92) (list 189 93) (list 94) (list 95) (list 96) (list 97) (list 98) (list 99) (list 100) (list 189 101) (list 102) (list 103) (list 104) (list 105) (list 106) (list 107) (list 108) (list 189 109) (list 110) (list 111) (list 112) (list 113) (list 114) (list 115) (list 116) (list 189 117) (list 118) (list 119) (list 120) (list 121) (list 122) (list 123) (list 124) (list 189 125) (list 126) (list 127) (list 128) (list 129) (list 130) (list 131) (list 132) (list 189 133) (list 134) (list 135) (list 136) (list 137) (list 138) (list 139) (list 140) (list 189 141) (list 142) (list 143) (list 144) (list 145) (list 146) (list 147) (list 148) (list 189 149) (list 150) (list 151) (list 152) (list 153) (list 154) (list 155) (list 156) (list 189 157) (list 158) (list 159) (list 160) (list 161) (list 162) (list 163) (list 164) (list 189 165) (list 166) (list 167) (list 168) (list 169) (list 170) (list 171) (list 172) (list 189 173) (list 174) (list 175) (list 176) (list 177) (list 178) (list 179) (list 180) (list 189 181) (list 182) (list 183) (list 184) (list 185) (list 186) (list 187) (list 188) (list 189) (list 191 190) (list 191) (list 193 192) (list 193) (list 194) (list 195) (list 196) (list 197) (list 198) (list 199) (list 200) (list 201) (list 202) (list 203) (list 204) (list 205) (list 206) (list 207) (list 208) (list 209) (list 210) (list 211) (list 212) (list 213) (list 214) (list 215) (list 216) (list 217) (list 218) (list 219) (list 220) (list 221) (list 222) (list 223) (list 224) (list 225) (list 226) (list 227) (list 228) (list 229) (list 230) (list 231) (list 232) (list 233) (list 234) (list 235) (list 236) (list 237) (list 238) (list 239) (list 240) (list 241) (list 242) (list 243) (list 244) (list 245) (list 246) (list 247) (list 248) (list 249) (list 250) (list 251) (list 252) (list 253) (list 254) (list 255) (list 256) (list 257) (list 258) (list 259) (list 260) (list 261) (list 262) (list 263) (list 264) (list 265) (list 266) (list 267) (list 268) (list 269) (list 270) (list 271) (list 272) (list 273) (list 274) (list 275) (list 276) (list 277) (list 278) (list 279) (list 280) (list 281) (list 282) (list 283) (list 284) (list 285) (list 286) (list 287) (list 288) (list 289) (list 290) (list 291) (list 292) (list 293) (list 294) (list 295) (list 296) (list 297) (list 298) (list 299) (list 300) (list 301) (list 302) (list 303) (list 304) (list 305) (list 306) (list 307) (list 308) (list 309) (list 310) (list 311) (list 312) (list 313) (list 314) (list 315) (list 316) (list 317) (list 318) (list 319) (list 320) (list 321) (list 322) (list 323) (list 324) (list 325) (list 326) (list 327) (list 328) (list 329) (list 330) (list 331) (list 332) (list 333) (list 334) (list 335) (list 336) (list 337) (list 338) (list 339) (list 340) (list 341) (list 342) (list 343) (list 344) (list 345) (list 346) (list 347) (list 348) (list 349) (list 350) (list 351) (list 352) (list 353) (list 354) (list 355) (list 356) (list 357) (list 358) (list 359) (list 360) (list 361) (list 362) (list 363) (list 364) (list 365) (list 366) (list 367) (list 368) (list 369) (list 370) (list 371) (list 372) (list 373) (list 374) (list 375) (list 376) (list 377) (list 378) (list 379) (list 380) (list 381) (list 382) (list 383) (list 384) (list 385) (list 386) (list 387) (list 388) (list 389) (list 390) (list 391) (list 392) (list 393) (list 394) (list 395) (list 396) (list 397) (list 398) (list 399) (list 400) (list 401) (list 402) (list 403) (list 404) (list 405) (list 406) (list 407) (list 408) (list 409) (list 410) (list 411) (list 412) (list 413) (list 414) (list 415) (list 416) (list 417) (list 418) (list 419) (list 420) (list 421) (list 422) (list 423) (list 424) (list 425) (list 426) (list 427) (list 428) (list 429) (list 430) (list 431) (list 432) (list 433) (list 434) (list 435) (list 436) (list 437) (list 438) (list 439) (list 440) (list 441) (list 442) (list 443) (list 444) (list 445) (list 446) (list 447) (list 448) (list 449) (list 450) (list 451) (list 452) (list 453) (list 454) (list 455) (list 456) (list 457) (list 458) (list 459) (list 460) (list 461) (list 462) (list 463) (list 464) (list 465) (list 466) (list 467) (list 468) (list 469) (list 470) (list 471) (list 472) (list 473) (list 474) (list 475) (list 476) (list 477) (list 478) (list 479) (list 480) (list 481) (list 482) (list 483) (list 484) (list 485) (list 486) (list 487) (list 488) (list 489) (list 490) (list 491) (list 492) (list 493) (list 494) (list 495) (list 496) (list 497) (list 498) (list 499) (list 500) (list 501) (list 502) (list 503) (list 504) (list 505) (list 506) (list 507) (list 508) (list 509) (list 510) (list 511) (list 512) (list 513) (list 514) (list 515) (list 516) (list 517) (list 518) (list 519) (list 520) (list 521) (list 522) (list 523) (list 524) (list 525) (list 526) (list 527) (list 528) (list 529) (list 530) (list 531) (list 532) (list 533) (list 534) (list 535) (list 536) (list 537) (list 538) (list 539) (list 540) (list 541) (list 542) (list 543) (list 544) (list 545) (list 546) (list 547) (list 548) (list 549) (list 550) (list 551) (list 552) (list 553) (list 554) (list 555) (list 556) (list 557) (list 558) (list 559) (list 560) (list 561) (list 562) (list 563) (list 564) (list 565) (list 566) (list 567) (list 568) (list 569) (list 570) (list 571) (list 572) (list 573) (list 574) (list 575) (list 576) (list 577) (list 578) (list 579) (list 580) (list 581) (list 582) (list 583) (list 584) (list 585) (list 586) (list 587) (list 588) (list 589) (list 590) (list 591) (list 592) (list 593) (list 594) (list 595) (list 596) (list 597) (list 598) (list 599) (list 600) (list 601) (list 602) (list 603) (list 604) (list 605) (list 606) (list 607) (list 608) (list 609) (list 610) (list 611) (list 612) (list 613) (list 614) (list 615) (list 616) (list 617) (list 618) (list 619) (list 620) (list 621) (list 622) (list 623) (list 624) (list 625) (list 626) (list 627) (list 628) (list 629) (list 630) (list 631) (list 632) (list 633) (list 634) (list 635) (list 636) (list 637) (list 638) (list 639) (list 640) (list 641) (list 642) (list 643) (list 644) (list 645) (list 646) (list 647) (list 648) (list 649) (list 650) (list 651) (list 652) (list 653) (list 654) (list 655) (list 656) (list 657) (list 658) (list 659) (list 660) (list 661) (list 662) (list 663) (list 664) (list 665) (list 666) (list 667) (list 668) (list 669) (list 670) (list 671) (list 672) (list 673) (list 674) (list 675) (list 676) (list 677) (list 678) (list 679) (list 680) (list 681) (list 682) (list 683) (list 684) (list 685) (list 686) (list 687) (list 688) (list 689) (list 690) (list 691) (list 692) (list 693) (list 694) (list 695) (list 696) (list 697) (list 698) (list 699) (list 700) (list 701) (list 702) (list 703) (list 704) (list 705) (list 706) (list 707) (list 708) (list 709) (list 710) (list 711) (list 712) (list 713) (list 714) (list 715) (list 716) (list 717) (list 718) (list 719) (list 720) (list 721) (list 722) (list 723) (list 724) (list 725) (list 726) (list 727) (list 728) (list 729) (list 730) (list 731) (list 732) (list 733) (list 734) (list 735) (list 736) (list 737) (list 738) (list 739) (list 740) (list 741) (list 742) (list 743) (list 744) (list 745) (list 746) (list 747) (list 748) (list 749) (list 750) (list 751) (list 752) (list 753) (list 754) (list 755) (list 756) (list 757) (list 758) (list 759) (list 760) (list 761) (list 762) (list 763) (list 764) (list 765) (list 766) (list 767) (list 768)) do (sethash hashtable key val)) hashtable) :hashsuppl (let ((hashtable (make-hash-table))) (loop for key in (listfor val in (listdo (sethash hashtable key val)) hashtable) :hashsuppl-> (let ((hashtable (make-hash-table))) (loop for key in (listfor val in (listdo (sethash hashtable key val)) hashtable) :veclrs (make-array 1000 :initial-contents (eval-my-list (quote (nil 0 1 2 0 0 1 0 1 0 1 1 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 0 1 0 1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :maxetat 768 :hashrepeats nil :lrsmode (quote t) :comparateur (quote compareevents) :name "improvizer" :context nil :continuity 3 :navigationmode (quote continuity) :currentstateidx 192 :prevstateidx 191 :max-continuity 2 :start-region (list 0 768) :fwsuffix (quote t) :bwsuffix (quote t) :bestsuffixmode nil :refharmscen nil :harmscenlength 48 :beats/measure 4 :reftempo 690 :currenttranspo 0 :nexteventifnosolution nil :lengthfactorsfromscen (list 1 1000) :besttranspomode (quote t) :firstwithouttranspomode nil :authorizedtranspos (list -5 -4 -3 -2 -1 0 1 2 3 4 5) :randomprefixoccurrencemode (quote t) :newtabousperf nil :tabou-mode (quote t) :tabou (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :feature nil :hashlabeltranspo (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :currentimproidx 191 :startingpointnextphasefound? nil :improtrace (let ((hashtable (make-hash-table))) (loop for key in (listfor val in (list (list 0 0) (list 577 0) (list 578 1) (list 579 2) (list 580 3) (list 581 4) (list 582 5) (list 583 6) (list 584 7) (list 585 8) (list 586 9) (list 587 10) (list 588 11) (list 589 12) (list 590 13) (list 591 14) (list 592 15) (list 593 16) (list 11 0) (list 12 1) (list 13 2) (list 14 3) (list 15 4) (list 16 5) (list 9 0) (list 10 1) (list 11 2) (list 12 3) (list 13 4) (list 14 5) (list 7 0) (list 8 1) (list 9 2) (list 10 3) (list 11 4) (list 12 5) (list 397 0) (list 398 1) (list 399 2) (list 400 3) (list 401 4) (list 402 5) (list 595 0) (list 596 1) (list 597 2) (list 598 3) (list 599 4) (list 600 5) (list 9 0) (list 10 1) (list 11 2) (list 12 3) (list 13 4) (list 14 5) (list 207 0) (list 208 1) (list 209 2) (list 210 3) (list 211 4) (list 212 5) (list 13 0) (list 14 1) (list 15 2) (list 16 3) (list 17 4) (list 18 5) (list 403 0) (list 404 1) (list 405 2) (list 406 3) (list 407 4) (list 408 5) (list 9 0) (list 10 1) (list 11 2) (list 12 3) (list 589 0) (list 590 1) (list 591 2) (list 592 3) (list 17 0) (list 18 1) (list 19 2) (list 20 3) (list 597 0) (list 598 1) (list 599 2) (list 600 3) (list 17 0) (list 18 1) (list 19 2) (list 20 3) (list 13 0) (list 14 1) (list 15 2) (list 16 3) (list 593 0) (list 594 1) (list 595 2) (list 596 3) (list 13 0) (list 14 1) (list 15 2) (list 16 3) (list 9 0) (list 10 1) (list 11 2) (list 12 3) (list 397 0) (list 398 1) (list 399 2) (list 400 3) (list 17 0) (list 18 1) (list 19 2) (list 20 3) (list 13 0) (list 14 1) (list 15 2) (list 16 3) (list 9 0) (list 10 1) (list 11 2) (list 12 3) (list 205 0) (list 206 1) (list 207 2) (list 208 3) (list 17 0) (list 18 1) (list 19 2) (list 20 3) (list 597 0) (list 598 1) (list 599 2) (list 600 3) (list 17 0) (list 18 1) (list 19 2) (list 20 3) (list 405 0) (list 406 1) (list 407 2) (list 408 3) (list 217 0) (list 218 1) (list 219 2) (list 220 3) (list 13 0) (list 14 1) (list 15 2) (list 16 3) (list 9 0) (list 10 1) (list 11 2) (list 12 3) (list 397 0) (list 398 1) (list 399 2) (list 400 3) (list 17 0) (list 18 1) (list 19 2) (list 20 3) (list 213 0) (list 214 1) (list 215 2) (list 216 3) (list 409 0) (list 410 1) (list 411 2) (list 412 3) (list 13 0) (list 14 1) (list 15 2) (list 16 3) (list 9 0) (list 10 1) (list 11 2) (list 12 3) (list 397 0) (list 398 1) (list 399 2) (list 400 3) (list 209 0) (list 210 1) (list 211 2) (list 212 3) (list 189 0) (list 190 1) (list 191 2) (list 192 3) (list 207 2) (list 22 3) (list 208 4) (list 209 5) (list 18 0) (list 19 1) (list 8 0) (list 20 1) (list 21 2) (list 22 3) (list 23 5) (list 8 0) (list 24 1) (list 25 2) (list 26 3) (list 27 4) (list 9 5) (list 12 0) (list 13 1) (list 14 2) (list 15 3) (list 16 5) (list 10 5) (list 10 0) (list 11 2) (list 12 3) (list 13 4) (list 14 5) (list 7 0) (list 8 1) (list 9 2) (list 10 3) (list 11 4) (list 12 5) (list 205 0) (list 206 1) (list 207 2) (list 208 3) (list 209 4) (list 210 5) (list 11 0) (list 12 1) (list 13 2) (list 14 3) (list 15 4) (list 16 5) (list 401 0) (list 402 1) (list 403 2) (list 404 3) (list 405 4) (list 406 5) (list 23 0) (list 24 1) (list 25 2) (list 26 3) (list 27 4) (list 28 5) (list 13 0) (list 14 1) (list 15 2) (list 16 3) (list 17 4) (list 18 5) (list 595 0) (list 596 1) (list 597 2) (list 598 3) (list 599 4) (list 600 5) (list 17 0) (list 18 1) (list 19 2) (list 20 3) (list 21 4) (list 22 5) (list 7 0) (list 8 1) (list 9 2) (list 10 3) (list 11 4) (list 12 5) (list 397 0) (list 398 1) (list 399 2) (list 400 3) (list 401 4) (list 402 5) (list 19 0) (list 20 1) (list 21 2) (list 22 3) (list 23 4) (list 24 5) (list 9 0) (list 10 1) (list 11 2) (list 12 3) (list 13 4) (list 14 5) (list 399 0) (list 400 1) (list 401 2) (list 402 3) (list 403 4) (list 404 5) (list 13 0) (list 14 1) (list 15 2) (list 16 3) (list 17 4) (list 18 5) (list 211 0) (list 212 1) (list 213 2) (list 214 3) (list 215 4) (list 216 5) (list 9 0) (list 10 1) (list 11 2) (list 12 3) (list 13 4) (list 14 5) (list 399 0) (list 400 1) (list 401 2) (list 402 3) (list 403 4) (list 404 5) (list 21 0) (list 22 1) (list 23 2) (list 24 3) (list 25 4) (list 26 5) (list 602 0) (list 11 0) (list 12 2) (list 12 2) (list 13 4) (list 8 0) (list 14 1) (list 13 2) (list 15 3) (list 14 4) (list 16 5) (list 399 0) (list 400 0) (list 401 1) (list 8 0) (list 402 1) (list 8 1) (list 403 1) (list 404 3) (list 189 0) (list 190 2) (list 190 2) (list 190 0) (list 383 0) (list 384 2) (list 192 0)) do (sethash hashtable key val)) hashtable) :modert nil :output (list (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 11 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 588 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 589 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 590 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 591 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 16 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 17 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 18 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 19 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 596 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 597 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 598 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 599 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 16 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 17 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 18 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 19 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 12 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 13 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 14 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 15 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 592 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 593 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 594 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 595 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 12 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 13 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 14 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 15 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 8 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 9 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 10 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 11 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 396 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 397 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 398 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 399 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 16 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 17 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 18 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 19 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 12 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 13 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 14 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 15 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 8 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 9 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 10 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 11 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 204 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 205 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 206 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 207 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 16 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 17 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 18 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 19 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 596 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 597 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 598 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 599 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 16 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 17 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 18 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 19 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 404 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 405 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 406 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 407 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 216 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 217 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 218 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 219 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 12 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 13 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 14 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 15 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 8 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 9 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 10 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 11 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 396 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 397 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 398 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 399 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 16 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 17 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 18 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 19 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 212 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 213 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 214 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 215 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 408 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 409 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 410 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 411 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 12 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 13 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 14 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 15 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 8 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 9 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 10 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 11 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 396 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 397 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 398 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 399 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 208 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 209 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 210 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 211 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7final) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 188 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7final) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 189 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype (quote 7final) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 190 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype (quote 7final) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 191 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t))) :gen-callback nil :from-file t)) :scenario (list (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote f) :chordtype (quote rien3) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote f) :chordtype (quote rien3) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote f) :chordtype (quote rien3) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype (quote deb) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7final) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7final) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype (quote 7final) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype (quote 7final) :from-file t))) :label-class (quote label) :output-fun nil :epsilon 5 :target-object nil :from-file t)) "x" nil (pairlis (quote (winsize winpos)) (list (om-make-point 250 280) (om-make-point 150 100))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 2" (om-make-point 155 28) (quote "VOICE 3: Memory online") "" (om-make-point 923 112) nil (om-make-color 0 0 0) (om-make-font "Verdana" 14.0 :family "Verdana" :style (quote (:bold)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 2" (quote list) (quote nil) (om-make-point 936 139) (om-make-point 129 30) "MyRentPartyLong" "\"MyRentPartyLong\"" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 3" (om-make-point 84 30) (quote "Handler") "" (om-make-point 944 324) nil (om-make-color 0 0 0) (om-make-font "Verdana" 14.0 :family "Verdana" :style (quote (:bold)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "LOW-CONTINUITY" (quote low-continuity) (quote ((om-load-inputfun (quote input-funbox) "SELF" "SELF" nil))) (om-make-point 977 499) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "HIGH-CONTINUITY" (quote high-continuity) (quote ((om-load-inputfun (quote input-funbox) "SELF" "SELF" nil))) (om-make-point 1058 499) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote abstraction) "Output functions" (om-load-patch-abs1 "Output functions" (quote ((let ((box (om-load-boxcall (quote abstraction) "Send" (om-load-lisp-abspatch "Send" 6.090012 ";;; Edit a valid LAMBDA EXPRESSION for \"lispfunction\"$;;; e.g. (lambda (arg1 arg2 ...) ( ... ))$$(lambda (seq index time handler target) $  (osc-send-sequence-fragment seq index \"127.0.0.1\" 7657 \"/modify\" 1)$)$$$") (quote ((om-load-inputfun (quote input-funbox) "" "SEQ" nil) (om-load-inputfun (quote input-funbox) "" "INDEX" nil) (om-load-inputfun (quote input-funbox) "" "TIME" nil) (om-load-inputfun (quote input-funbox) "" "HANDLER" nil) (om-load-inputfun (quote input-funbox) "" "TARGET" nil))) (om-make-point 43 213) nil (list (list "dedee" "lapin")) "l" "Send"))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 221 42) (quote "Send to Max the indexes of the slices to play in the audio buffer") "" (om-make-point 45 171) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12.0 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote abstraction) "Print1" (om-load-lisp-abspatch "Print1" 6.090012 ";;; Edit a valid LAMBDA EXPRESSION for \"lispfunction\"$;;; e.g. (lambda (arg1 arg2 ...) ( ... ))$$(lambda (seq index time handler target) $  (let ((res nil))$    (setf res (loop for event in seq$                    collect (list $                             \"Idx\" (IdxInBuffer (data event))$                             \"Transpo\" (CurrentTransfo (data event)))))$    (print res)$   )$)") (quote ((om-load-inputfun (quote input-funbox) "" "SEQ" nil) (om-load-inputfun (quote input-funbox) "" "INDEX" nil) (om-load-inputfun (quote input-funbox) "" "TIME" nil) (om-load-inputfun (quote input-funbox) "" "HANDLER" nil) (om-load-inputfun (quote input-funbox) "" "TARGET" nil))) (om-make-point 178 74) nil (list (list "dedee" "lapin")) "l" "Print1"))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 2" (om-make-point 190 44) (quote "Print the indexes of the slices to play in the audio buffer") "" (om-make-point 180 32) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12.0 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote abstraction) "Print2" (om-load-lisp-abspatch "Print2" 6.090012 ";;; Edit a valid LAMBDA EXPRESSION for \"lispfunction\"$;;; e.g. (lambda (arg1 arg2 ...) ( ... ))$$(lambda (seq index time handler target) $(print $   (list \"seq\" seq \"index\" index \"time\" time \"handler\" handler \"target\" target)$   )$  )") (quote ((om-load-inputfun (quote input-funbox) "" "SEQ" nil) (om-load-inputfun (quote input-funbox) "" "INDEX" nil) (om-load-inputfun (quote input-funbox) "" "TIME" nil) (om-load-inputfun (quote input-funbox) "" "HANDLER" nil) (om-load-inputfun (quote input-funbox) "" "TARGET" nil))) (om-make-point 45 77) nil (list (list "dedee" "lapin")) "l" "Print2"))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 125 30) (quote "Print the events") "" (om-make-point 31 48) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12.0 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote nil) 6.090012 nil "" (om-make-point 200 200) (om-make-point 500 400)) (quote nil) (om-make-point 1468 398) nil nil nil "Output functions"))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote abstraction) "lispfunction" (om-load-lisp-abspatch "lispfunction" 6.090012 "(lambda (a) (second a))") (quote ((om-load-inputfun (quote input-funbox) "" "A" nil))) (om-make-point 18 456) nil nil "l" "lispfunction"))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "OSC-RECEIVE" (quote osc-receive) (quote ((om-load-inputfun (quote input-funbox) "port number" "PORT" 7778) (om-load-inputfun (quote input-funbox) "incoming message processing patch" "MSG-PROCESSING" nil))) (om-make-point 2 529) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "CAR" (quote car) (quote ((om-load-inputfun (quote input-funbox) "X" "X" nil))) (om-make-point 129 570) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box t)) box) (let ((box (om-load-boxcall (quote lispfun) "UPDATE-CURRENT-PERF-INDEX" (quote update-current-perf-index) (quote ((om-load-inputfun (quote input-funbox) "SELF" "SELF" nil) (om-load-inputfun (quote input-funbox) "IDX" "IDX" 0))) (om-make-point 919 690) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box t)) box) (let ((box (om-load-boxcall (quote abstraction) "Send2" (om-load-lisp-abspatch "Send2" 6.090012 ";;; Edit a valid LAMBDA EXPRESSION for \"lispfunction\"$;;; e.g. (lambda (arg1 arg2 ...) ( ... ))$$(lambda (seq index time handler target) $  (osc-send-sequence-fragment seq index \"127.0.0.1\" 7657 \"/modify\" 2)$)$$$") (quote ((om-load-inputfun (quote input-funbox) "" "SEQ" nil) (om-load-inputfun (quote input-funbox) "" "INDEX" nil) (om-load-inputfun (quote input-funbox) "" "TIME" nil) (om-load-inputfun (quote input-funbox) "" "HANDLER" nil) (om-load-inputfun (quote input-funbox) "" "TARGET" nil))) (om-make-point 829 279) nil (list (list "dedee" "lapin")) "l" "Send2"))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "IMPROVISATION-HANDLER" (quote improvisation-handler) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "" "name" "Improvizer-Handler") (om-load-inputfun (quote input-funbox) "" "rtimprovizer" nil) (om-load-inputfun (quote input-funbox) "" "scenario" nil) (om-load-inputfun (quote input-funbox) "" "label-class" (quote label)) (om-load-inputfun (quote input-funbox) "" "output-fun" (quote output-sequence)) (om-load-inputfun (quote input-funbox) "" "epsilon" 5) (om-load-inputfun (quote input-funbox) "" "target-object" nil))) (om-make-point 641 348) (om-make-point 224 141) (if (find-class (quote improvisation-handler) nil) (make-instance (quote improvisation-handler) :name "Improvizer-Handler" :rtimprovizer (if (find-class (quote realtimeimprovizer) nil) (make-instance (quote realtimeimprovizer) :vectext (make-array 1000 :initial-contents (eval-my-list (quote (nil (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype (quote deb) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 0 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 1 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 2 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 3 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 4 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 5 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 6 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 7 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 8 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 9 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 10 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 11 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 12 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 13 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 14 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 15 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 16 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 17 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 18 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 19 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 20 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 21 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 22 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 23 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 24 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 25 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 26 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 27 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 28 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 29 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 30 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 31 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 32 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 33 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 34 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 35 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 36 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 37 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 38 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 39 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 40 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 41 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 42 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 43 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 44 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 45 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 46 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 47 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 48 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 49 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 50 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 51 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 52 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 53 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 54 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 55 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 56 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 57 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 58 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 59 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 60 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 61 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 62 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 63 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 64 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 65 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 66 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 67 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 68 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 69 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 70 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 71 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 72 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 73 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 74 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 75 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 76 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 77 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 78 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 79 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 80 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 81 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 82 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 83 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 84 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 85 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 86 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 87 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 88 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 89 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 90 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 91 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 92 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 93 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 94 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 95 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 96 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 97 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 98 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 99 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 100 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 101 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 102 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 103 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 104 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 105 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 106 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 107 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 108 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 109 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 110 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 111 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 112 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 113 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 114 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 115 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 116 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 117 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 118 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 119 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 120 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 121 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 122 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 123 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 124 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 125 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 126 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 127 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 128 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 129 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 130 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 131 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 132 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 133 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 134 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 135 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 136 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 137 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 138 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 139 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 140 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 141 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 142 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 143 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 144 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 145 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 146 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 147 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 148 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 149 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 150 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 151 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 152 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 153 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 154 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 155 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 156 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 157 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 158 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 159 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 160 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 161 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 162 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 163 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 164 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 165 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 166 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 167 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 168 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 169 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 170 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 171 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 172 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 173 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 174 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 175 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 176 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 177 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 178 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 179 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 180 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 181 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 182 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 183 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 184 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7final) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 185 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7final) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 186 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype (quote 7final) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 187 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype (quote 7final) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 188 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote f) :chordtype (quote rien) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 189 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote f) :chordtype (quote rien2) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 190 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote f) :chordtype (quote rien3) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 191 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :hashtransition (let ((hashtable (make-hash-table))) (loop for key in (listfor val in (list (list 192 191 190 188 186 6 4 2 1) (list 2) (list 4 3) (list 4) (list 186 10 6 5) (list 186 10 6) (list 8 7) (list 8) (list 9) (list 186 10) (list 11) (list 12) (list 13) (list 14) (list 15) (list 16) (list 17) (list 186 18) (list 19) (list 20) (list 21) (list 22) (list 23) (list 24) (list 25) (list 186 26) (list 27) (list 28) (list 29) (list 30) (list 31) (list 32) (list 33) (list 186 34) (list 35) (list 36) (list 37) (list 38) (list 39) (list 40) (list 41) (list 186 42) (list 43) (list 44) (list 45) (list 46) (list 47) (list 48) (list 49) (list 186 50) (list 51) (list 52) (list 53) (list 54) (list 55) (list 56) (list 57) (list 186 58) (list 59) (list 60) (list 61) (list 62) (list 63) (list 64) (list 65) (list 186 66) (list 67) (list 68) (list 69) (list 70) (list 71) (list 72) (list 73) (list 186 74) (list 75) (list 76) (list 77) (list 78) (list 79) (list 80) (list 81) (list 186 82) (list 83) (list 84) (list 85) (list 86) (list 87) (list 88) (list 89) (list 186 90) (list 91) (list 92) (list 93) (list 94) (list 95) (list 96) (list 97) (list 186 98) (list 99) (list 100) (list 101) (list 102) (list 103) (list 104) (list 105) (list 186 106) (list 107) (list 108) (list 109) (list 110) (list 111) (list 112) (list 113) (list 186 114) (list 115) (list 116) (list 117) (list 118) (list 119) (list 120) (list 121) (list 186 122) (list 123) (list 124) (list 125) (list 126) (list 127) (list 128) (list 129) (list 186 130) (list 131) (list 132) (list 133) (list 134) (list 135) (list 136) (list 137) (list 186 138) (list 139) (list 140) (list 141) (list 142) (list 143) (list 144) (list 145) (list 186 146) (list 147) (list 148) (list 149) (list 150) (list 151) (list 152) (list 153) (list 186 154) (list 155) (list 156) (list 157) (list 158) (list 159) (list 160) (list 161) (list 186 162) (list 163) (list 164) (list 165) (list 166) (list 167) (list 168) (list 169) (list 186 170) (list 171) (list 172) (list 173) (list 174) (list 175) (list 176) (list 177) (list 186 178) (list 179) (list 180) (list 181) (list 182) (list 183) (list 184) (list 185) (list 186) (list 188 187) (list 188) (list 190 189) (list 190) (list 191) (list 192)) do (sethash hashtable key val)) hashtable) :hashsuppl (let ((hashtable (make-hash-table))) (loop for key in (listfor val in (list -1 0 0 2 0 4 0 6 4 5 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 0 186 0 188 0 0 0) do (sethash hashtable key val)) hashtable) :hashsuppl-> (let ((hashtable (make-hash-table))) (loop for key in (listfor val in (listdo (sethash hashtable key val)) hashtable) :veclrs (make-array 1000 :initial-contents (eval-my-list (quote (nil 0 0 1 0 1 0 1 1 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 0 1 0 1 0 0 0 nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :maxetat 192 :hashrepeats nil :lrsmode (quote t) :comparateur (quote compareevents) :name "improvizer" :context nil :continuity 3 :navigationmode (quote continuity) :currentstateidx 189 :prevstateidx 188 :max-continuity 2 :start-region (list 0 192) :fwsuffix (quote t) :bwsuffix (quote t) :bestsuffixmode nil :refharmscen nil :harmscenlength 48 :beats/measure 4 :reftempo 690 :currenttranspo 0 :nexteventifnosolution nil :lengthfactorsfromscen (list 1 1000) :besttranspomode (quote t) :firstwithouttranspomode nil :authorizedtranspos (list -5 -4 -3 -2 -1 0 1 2 3 4 5) :randomprefixoccurrencemode (quote t) :newtabousperf nil :tabou-mode (quote t) :tabou (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :feature nil :hashlabeltranspo (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :currentimproidx 191 :startingpointnextphasefound? nil :improtrace (let ((hashtable (make-hash-table))) (loop for key in (listfor val in (list (list 0 0) (list 192 0) (list 192 0) (list 1 0) (list 2 1) (list 3 2) (list 4 3) (list 5 4) (list 6 5) (list 167 0) (list 168 1) (list 169 2) (list 170 3) (list 171 4) (list 172 5) (list 93 0) (list 94 1) (list 95 2) (list 96 3) (list 97 4) (list 98 5) (list 11 0) (list 12 1) (list 13 2) (list 14 3) (list 143 0) (list 144 1) (list 145 2) (list 146 3) (list 19 0) (list 20 1) (list 21 2) (list 22 3) (list 143 0) (list 144 1) (list 145 2) (list 146 3) (list 171 0) (list 172 1) (list 173 2) (list 174 3) (list 79 0) (list 80 1) (list 81 2) (list 82 3) (list 147 0) (list 148 1) (list 149 2) (list 150 3) (list 23 0) (list 24 1) (list 25 2) (list 26 3) (list 155 0) (list 156 1) (list 157 2) (list 158 3) (list 63 0) (list 64 1) (list 65 2) (list 66 3) (list 139 0) (list 140 1) (list 141 2) (list 142 3) (list 127 0) (list 128 1) (list 129 2) (list 130 3) (list 59 0) (list 60 1) (list 61 2) (list 62 3) (list 119 0) (list 120 1) (list 121 2) (list 122 3) (list 83 0) (list 84 1) (list 85 2) (list 86 3) (list 159 0) (list 160 1) (list 161 2) (list 162 3) (list 155 0) (list 156 1) (list 157 2) (list 158 3) (list 183 0) (list 184 1) (list 185 2) (list 10 0) (list 11 1) (list 12 2) (list 13 3) (list 102 0) (list 103 1) (list 104 2) (list 105 3) (list 162 0) (list 163 1) (list 164 2) (list 165 3) (list 110 0) (list 111 1) (list 112 2) (list 113 3) (list 34 0) (list 35 1) (list 36 2) (list 37 3) (list 6 0) (list 7 1) (list 8 2) (list 9 3) (list 82 0) (list 83 1) (list 84 2) (list 85 3) (list 118 0) (list 119 1) (list 120 2) (list 121 3) (list 106 0) (list 107 1) (list 108 2) (list 109 3) (list 14 0) (list 15 1) (list 16 2) (list 17 3) (list 138 0) (list 139 1) (list 140 2) (list 141 3) (list 182 0) (list 183 1) (list 184 2) (list 185 3) (list 42 0) (list 43 1) (list 44 2) (list 45 3) (list 38 0) (list 39 1) (list 40 2) (list 41 3) (list 130 0) (list 131 1) (list 132 2) (list 133 3) (list 70 0) (list 71 1) (list 72 2) (list 73 3) (list 58 0) (list 59 1) (list 60 2) (list 61 3) (list 22 0) (list 23 1) (list 24 2) (list 25 3) (list 154 0) (list 155 1) (list 156 2) (list 157 3) (list 62 0) (list 63 1) (list 64 2) (list 65 3) (list 122 0) (list 123 1) (list 124 2) (list 125 3) (list 70 0) (list 71 1) (list 72 2) (list 73 3) (list 114 0) (list 115 1) (list 116 2) (list 117 3) (list 78 0) (list 79 1) (list 80 2) (list 81 3) (list 186 0) (list 187 1) (list 188 2) (list 189 3)) do (sethash hashtable key val)) hashtable) :modert nil :output (list (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 12 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 13 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 142 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 143 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 144 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 145 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 18 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 19 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 20 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 21 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 142 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 143 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 144 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 145 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 170 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 171 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 172 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 173 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 78 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 79 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 80 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 81 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 146 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 147 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 148 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 149 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 22 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 23 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 24 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 25 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 154 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 155 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 156 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 157 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 62 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 63 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 64 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 65 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 138 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 139 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 140 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 141 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 126 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 127 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 128 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 129 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 58 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 59 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 60 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 61 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 118 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 119 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 120 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 121 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 82 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 83 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 84 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 85 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 158 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 159 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 160 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 161 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 154 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 155 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 156 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 157 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 182 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 183 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 184 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 9 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 10 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 11 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 12 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 101 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 102 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 103 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 104 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 161 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 162 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 163 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 164 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 109 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 110 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 111 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 112 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 33 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 34 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 35 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 36 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 5 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 6 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 7 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 8 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 81 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 82 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 83 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 84 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 117 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 118 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 119 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 120 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 105 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 106 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 107 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 108 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 13 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 14 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 15 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 16 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 137 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 138 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 139 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 140 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 181 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 182 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 183 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 184 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 41 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 42 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 43 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 44 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 37 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 38 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 39 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 40 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 129 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 130 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 131 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 132 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 69 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 70 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 71 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 72 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 57 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 58 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 59 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 60 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 21 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 22 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 23 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 24 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 153 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 154 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 155 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 156 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 61 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 62 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 63 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 64 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 121 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 122 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 123 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 124 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 69 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 70 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 71 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 72 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 113 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 114 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 115 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 116 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 77 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 78 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 79 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 80 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7final) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 185 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7final) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 186 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype (quote 7final) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 187 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype (quote 7final) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 188 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t))) :gen-callback nil :from-file t)) :scenario (list (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote f) :chordtype (quote rien3) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote f) :chordtype (quote rien3) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote f) :chordtype (quote rien3) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype (quote deb) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7final) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7final) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype (quote 7final) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype (quote 7final) :from-file t))) :label-class (quote label) :output-fun nil :epsilon 5 :target-object nil :from-file t)) "x" nil (pairlis (quote (winsize winpos)) (list (om-make-point 250 280) (om-make-point 150 100))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 2" (om-make-point 147 30) (quote "VOICE 2: Memory") "" (om-make-point 607 116) nil (om-make-color 0 0 0) (om-make-font "Verdana" 14.0 :family "Verdana" :style (quote (:bold)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 2" (quote list) (quote nil) (om-make-point 609 142) (om-make-point 159 30) "MyRentPartyLong-MEM" "\"MyRentPartyLong-MEM\"" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 3" (om-make-point 84 30) (quote "Handler") "" (om-make-point 638 325) nil (om-make-color 0 0 0) (om-make-font "Verdana" 14.0 :family "Verdana" :style (quote (:bold)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 142 49) (quote "Receive performance time from Max") "" (om-make-point 7 414) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12.0 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "LOW-CONTINUITY" (quote low-continuity) (quote ((om-load-inputfun (quote input-funbox) "SELF" "SELF" nil))) (om-make-point 767 499) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "HIGH-CONTINUITY" (quote high-continuity) (quote ((om-load-inputfun (quote input-funbox) "SELF" "SELF" nil))) (om-make-point 681 498) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote abstraction) "Send1" (om-load-lisp-abspatch "Send1" 6.090012 ";;; Edit a valid LAMBDA EXPRESSION for \"lispfunction\"$;;; e.g. (lambda (arg1 arg2 ...) ( ... ))$$(lambda (seq index time handler target) $  (osc-send-sequence-fragment seq index \"127.0.0.1\" 7657 \"/modify\" 1)$)$$$") (quote ((om-load-inputfun (quote input-funbox) "" "SEQ" nil) (om-load-inputfun (quote input-funbox) "" "INDEX" nil) (om-load-inputfun (quote input-funbox) "" "TIME" nil) (om-load-inputfun (quote input-funbox) "" "HANDLER" nil) (om-load-inputfun (quote input-funbox) "" "TARGET" nil))) (om-make-point 367 281) nil (list (list "dedee" "lapin")) "l" "Send1"))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "HIGH-CONTINUITY" (quote high-continuity) (quote ((om-load-inputfun (quote input-funbox) "SELF" "SELF" nil))) (om-make-point 329 518) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "LOW-CONTINUITY" (quote low-continuity) (quote ((om-load-inputfun (quote input-funbox) "SELF" "SELF" nil))) (om-make-point 235 518) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 3" (om-make-point 695 75) (quote "Use with the Max interface$Example: Scenario = Chord chart, Memory = Offline/online") "" (om-make-point 60 1) nil (om-make-color 0.119861 0.322888 0.474787) (om-make-font "Verdana" 18.0 :family "Verdana" :style (quote (:bold)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 221 42) (quote "Send to Max the indexes of the slices to play in the audio buffer") "" (om-make-point 407 305) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12.0 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 2" (om-make-point 205 27) (quote "Chosen output method") "" (om-make-point 407 282) nil (om-make-color 0 0 0) (om-make-font "Verdana" 14.0 :family "Verdana" :style (quote (:bold)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 3" (om-make-point 84 30) (quote "Handler") "" (om-make-point 164 319) nil (om-make-color 0 0 0) (om-make-font "Verdana" 14.0 :family "Verdana" :style (quote (:bold)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 3" (quote list) (quote nil) (om-make-point 17 99) (om-make-point 129 30) "MyRentPartyLong" "\"MyRentPartyLong\"" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 2" (quote list) (quote nil) (om-make-point 137 145) (om-make-point 159 30) "MyRentPartyLong-MEM" "\"MyRentPartyLong-MEM\"" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 3" (om-make-point 84 30) (quote "Scenario") "" (om-make-point 14 71) nil (om-make-color 0 0 0) (om-make-font "Verdana" 14.0 :family "Verdana" :style (quote (:bold)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 2" (om-make-point 147 30) (quote "VOICE 1: Memory") "" (om-make-point 134 118) nil (om-make-color 0 0 0) (om-make-font "Verdana" 14.0 :family "Verdana" :style (quote (:bold)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote abstraction) "Load harm scenario" (om-load-patch-abs1 "Load harm scenario" (quote ((let ((box (om-load-boxin "input 2" 1 (om-make-point 415 157) "" nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "OSC-SEND-LIST-AS-ANTESCOFO-MAP" (quote osc-send-list-as-antescofo-map) (quote ((om-load-inputfun (quote input-funbox) "SEQUENCE" "SEQUENCE" nil) (om-load-inputfun (quote input-funbox) "STARTIDX" "STARTIDX" 0) (om-load-inputfun (quote input-funbox) "HOSTSEND" "HOSTSEND" "127.0.0.1") (om-load-inputfun (quote input-funbox) "PORTSEND" "PORTSEND" nil) (om-load-inputfun (quote input-funbox) "ADRESSSEND" "ADRESSSEND" "/scenario") (om-load-inputfun (quote input-funbox) "OSCHEADMESS" "OSCHEADMESS" 0))) (om-make-point 329 421) (om-make-point 186 43) nil "&" nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxout "output 3" 2 (om-make-point 468 478) (quote ((om-load-inputfun (quote input-funbox) "" "out" nil))) nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote abstraction) "lispfunction" (om-load-lisp-abspatch "lispfunction" 6.090012 ";;; Edit a valid LAMBDA EXPRESSION for \"lispfunction\"$;;; e.g. (lambda (arg1 arg2 ...) ( ... ))$$(lambda (name-tune) (gethash name-tune *available-grids*))") (quote ((om-load-inputfun (quote input-funbox) "" "NAME-TUNE" nil))) (om-make-point 120 99) nil (list (if (find-class (quote tune) nil) (make-instance (quote tune) :midifixedbuff "/Users/jnika/Google Drive/Dev/ImproteK/Max-Interface/midibuff.mid" :tunedir (om-make-pathname :directory (quote (:absolute "Users" "jnika" "Google Drive" "Dev" "ImproteK" "Max-Interface")) :device nil :host nil :name nil :type nil) :tunename "MyOleo" :grid (list (list (quote d) 7 4) (list (quote g) 7 4) (list (quote c) 7 4) (list (quote f) 7 4) (list (quote bb) (quote maj7) 2) (list (quote g) (quote m7) 2) (list (quote c) (quote m7) 2) (list (quote f) 7 2) (list (quote bb) (quote maj7) 2) (list (quote g) 7 2) (list (quote c) (quote m7) 2) (list (quote f) 7 2) (list (quote bb) (quote maj7) 2) (list (quote bb) 7 2) (list (quote eb) (quote maj7) 4) (list (quote d) (quote m7) 2) (list (quote g) (quote m7) 2) (list (quote c) (quote m7) 2) (list (quote f) 7 2) (list (quote bb) (quote maj7) 2) (list (quote g) (quote m7) 2) (list (quote c) (quote m7) 2) (list (quote f) 7 2) (list (quote bb) (quote maj7) 2) (list (quote g) 7 2) (list (quote c) (quote m7) 2) (list (quote f) 7 2) (list (quote bb) (quote maj7) 2) (list (quote bb) 7 2) (list (quote eb) (quote maj7) 4) (list (quote d) (quote m7) 2) (list (quote g) (quote m7) 2) (list (quote c) (quote m7) 1) (list (quote f) 7 1) (list (quote bb) (quote maj7) 2) (list (quote d) 7 8) (list (quote g) 7 8) (list (quote c) 7 8) (list (quote f) 7 8) (list (quote bb) (quote maj7) 2) (list (quote g) (quote m7) 2) (list (quote c) (quote m7) 2) (list (quote f) 7 2) (list (quote bb) (quote maj7) 2) (list (quote g) 7 2) (list (quote c) (quote m7) 2) (list (quote f) 7 2) (list (quote bb) (quote maj7) 2) (list (quote bb) 7 2) (list (quote eb) (quote maj7) 4) (list (quote d) (quote m7) 2) (list (quote g) (quote m7) 2) (list (quote c) (quote m7) 1) (list (quote f) 7 1) (list (quote bb) (quote maj7) 2)) :alternategrid nil :chapters (list 1) :oracletable (let ((hashtable (make-hash-table))) (loop for key in (list 3 4 5 6 7 8 9 10 11 12 13 14) for val in (list (if (find-class (quote improvizer) nil) (make-instance (quote improvizer) :vectext (make-array 1000 :initial-contents (eval-my-list (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :hashtransition (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :hashsuppl (let ((hashtable (make-hash-table))) (loop for key in (list 0) for val in (list -1) do (sethash hashtable key val)) hashtable) :hashsuppl-> (let ((hashtable (make-hash-table))) (loop for key in (list -1) for val in (list 0) do (sethash hashtable key val)) hashtable) :veclrs (make-array 1000 :initial-contents (eval-my-list (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :maxetat 0 :hashrepeats nil :lrsmode (quote t) :comparateur (quote compareevents) :name "improvizer" :context nil :continuity 0 :navigationmode (quote continuity) :currentstateidx 0 :prevstateidx -1 :max-continuity 1000 :start-region (list 0 0) :fwsuffix (quote t) :bwsuffix (quote t) :bestsuffixmode nil :refharmscen nil :harmscenlength 48 :beats/measure 4 :reftempo 536 :currenttranspo 0 :nexteventifnosolution (quote t) :lengthfactorsfromscen (list 0 0) :besttranspomode (quote t) :firstwithouttranspomode nil :authorizedtranspos (list -4 -3 -2 -1 1 2 3 4) :randomprefixoccurrencemode nil :newtabousperf nil :tabou-mode (quote t) :tabou (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :feature nil :hashlabeltranspo (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :from-file t)) (if (find-class (quote improvizer) nil) (make-instance (quote improvizer) :vectext (make-array 1000 :initial-contents (eval-my-list (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :hashtransition (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :hashsuppl (let ((hashtable (make-hash-table))) (loop for key in (list 0) for val in (list -1) do (sethash hashtable key val)) hashtable) :hashsuppl-> (let ((hashtable (make-hash-table))) (loop for key in (list -1) for val in (list 0) do (sethash hashtable key val)) hashtable) :veclrs (make-array 1000 :initial-contents (eval-my-list (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :maxetat 0 :hashrepeats nil :lrsmode (quote t) :comparateur (quote compareevents) :name "improvizer" :context nil :continuity 0 :navigationmode (quote continuity) :currentstateidx 0 :prevstateidx -1 :max-continuity 1000 :start-region (list 0 0) :fwsuffix (quote t) :bwsuffix (quote t) :bestsuffixmode nil :refharmscen nil :harmscenlength 48 :beats/measure 4 :reftempo 536 :currenttranspo 0 :nexteventifnosolution (quote t) :lengthfactorsfromscen (list 0 0) :besttranspomode (quote t) :firstwithouttranspomode nil :authorizedtranspos (list -4 -3 -2 -1 1 2 3 4) :randomprefixoccurrencemode nil :newtabousperf nil :tabou-mode (quote t) :tabou (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :feature nil :hashlabeltranspo (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :from-file t)) (if (find-class (quote improvizer) nil) (make-instance (quote improvizer) :vectext (make-array 1000 :initial-contents (eval-my-list (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :hashtransition (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :hashsuppl (let ((hashtable (make-hash-table))) (loop for key in (list 0) for val in (list -1) do (sethash hashtable key val)) hashtable) :hashsuppl-> (let ((hashtable (make-hash-table))) (loop for key in (list -1) for val in (list 0) do (sethash hashtable key val)) hashtable) :veclrs (make-array 1000 :initial-contents (eval-my-list (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :maxetat 0 :hashrepeats nil :lrsmode (quote t) :comparateur (quote compareevents) :name "improvizer" :context nil :continuity 0 :navigationmode (quote continuity) :currentstateidx 0 :prevstateidx -1 :max-continuity 1000 :start-region (list 0 0) :fwsuffix (quote t) :bwsuffix (quote t) :bestsuffixmode nil :refharmscen nil :harmscenlength 48 :beats/measure 4 :reftempo 536 :currenttranspo 0 :nexteventifnosolution (quote t) :lengthfactorsfromscen (list 0 0) :besttranspomode (quote t) :firstwithouttranspomode nil :authorizedtranspos (list -4 -3 -2 -1 1 2 3 4) :randomprefixoccurrencemode nil :newtabousperf nil :tabou-mode (quote t) :tabou (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :feature nil :hashlabeltranspo (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :from-file t)) (if (find-class (quote improvizer) nil) (make-instance (quote improvizer) :vectext (make-array 1000 :initial-contents (eval-my-list (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :hashtransition (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :hashsuppl (let ((hashtable (make-hash-table))) (loop for key in (list 0) for val in (list -1) do (sethash hashtable key val)) hashtable) :hashsuppl-> (let ((hashtable (make-hash-table))) (loop for key in (list -1) for val in (list 0) do (sethash hashtable key val)) hashtable) :veclrs (make-array 1000 :initial-contents (eval-my-list (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :maxetat 0 :hashrepeats nil :lrsmode (quote t) :comparateur (quote compareevents) :name "improvizer" :context nil :continuity 0 :navigationmode (quote continuity) :currentstateidx 0 :prevstateidx -1 :max-continuity 1000 :start-region (list 0 0) :fwsuffix (quote t) :bwsuffix (quote t) :bestsuffixmode nil :refharmscen nil :harmscenlength 48 :beats/measure 4 :reftempo 536 :currenttranspo 0 :nexteventifnosolution (quote t) :lengthfactorsfromscen (list 0 0) :besttranspomode (quote t) :firstwithouttranspomode nil :authorizedtranspos (list -4 -3 -2 -1 1 2 3 4) :randomprefixoccurrencemode nil :newtabousperf nil :tabou-mode (quote t) :tabou (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :feature nil :hashlabeltranspo (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :from-file t)) (if (find-class (quote improvizer) nil) (make-instance (quote improvizer) :vectext (make-array 1000 :initial-contents (eval-my-list (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :hashtransition (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :hashsuppl (let ((hashtable (make-hash-table))) (loop for key in (list 0) for val in (list -1) do (sethash hashtable key val)) hashtable) :hashsuppl-> (let ((hashtable (make-hash-table))) (loop for key in (list -1) for val in (list 0) do (sethash hashtable key val)) hashtable) :veclrs (make-array 1000 :initial-contents (eval-my-list (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :maxetat 0 :hashrepeats nil :lrsmode (quote t) :comparateur (quote compareevents) :name "improvizer" :context nil :continuity 0 :navigationmode (quote continuity) :currentstateidx 0 :prevstateidx -1 :max-continuity 1000 :start-region (list 0 0) :fwsuffix (quote t) :bwsuffix (quote t) :bestsuffixmode nil :refharmscen nil :harmscenlength 48 :beats/measure 4 :reftempo 536 :currenttranspo 0 :nexteventifnosolution (quote t) :lengthfactorsfromscen (list 0 0) :besttranspomode (quote t) :firstwithouttranspomode nil :authorizedtranspos (list -4 -3 -2 -1 1 2 3 4) :randomprefixoccurrencemode nil :newtabousperf nil :tabou-mode (quote t) :tabou (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :feature nil :hashlabeltranspo (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :from-file t)) (if (find-class (quote improvizer) nil) (make-instance (quote improvizer) :vectext (make-array 1000 :initial-contents (eval-my-list (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :hashtransition (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :hashsuppl (let ((hashtable (make-hash-table))) (loop for key in (list 0) for val in (list -1) do (sethash hashtable key val)) hashtable) :hashsuppl-> (let ((hashtable (make-hash-table))) (loop for key in (list -1) for val in (list 0) do (sethash hashtable key val)) hashtable) :veclrs (make-array 1000 :initial-contents (eval-my-list (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :maxetat 0 :hashrepeats nil :lrsmode (quote t) :comparateur (quote compareevents) :name "improvizer" :context nil :continuity 0 :navigationmode (quote continuity) :currentstateidx 0 :prevstateidx -1 :max-continuity 1000 :start-region (list 0 0) :fwsuffix (quote t) :bwsuffix (quote t) :bestsuffixmode nil :refharmscen nil :harmscenlength 48 :beats/measure 4 :reftempo 536 :currenttranspo 0 :nexteventifnosolution (quote t) :lengthfactorsfromscen (list 0 0) :besttranspomode (quote t) :firstwithouttranspomode nil :authorizedtranspos (list -4 -3 -2 -1 1 2 3 4) :randomprefixoccurrencemode nil :newtabousperf nil :tabou-mode (quote t) :tabou (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :feature nil :hashlabeltranspo (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :from-file t)) (if (find-class (quote improvizer) nil) (make-instance (quote improvizer) :vectext (make-array 1000 :initial-contents (eval-my-list (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :hashtransition (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :hashsuppl (let ((hashtable (make-hash-table))) (loop for key in (list 0) for val in (list -1) do (sethash hashtable key val)) hashtable) :hashsuppl-> (let ((hashtable (make-hash-table))) (loop for key in (list -1) for val in (list 0) do (sethash hashtable key val)) hashtable) :veclrs (make-array 1000 :initial-contents (eval-my-list (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :maxetat 0 :hashrepeats nil :lrsmode (quote t) :comparateur (quote compareevents) :name "improvizer" :context nil :continuity 0 :navigationmode (quote continuity) :currentstateidx 0 :prevstateidx -1 :max-continuity 1000 :start-region (list 0 0) :fwsuffix (quote t) :bwsuffix (quote t) :bestsuffixmode nil :refharmscen nil :harmscenlength 48 :beats/measure 4 :reftempo 536 :currenttranspo 0 :nexteventifnosolution (quote t) :lengthfactorsfromscen (list 0 0) :besttranspomode (quote t) :firstwithouttranspomode nil :authorizedtranspos (list -4 -3 -2 -1 1 2 3 4) :randomprefixoccurrencemode nil :newtabousperf nil :tabou-mode (quote t) :tabou (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :feature nil :hashlabeltranspo (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :from-file t)) (if (find-class (quote improvizer) nil) (make-instance (quote improvizer) :vectext (make-array 1000 :initial-contents (eval-my-list (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :hashtransition (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :hashsuppl (let ((hashtable (make-hash-table))) (loop for key in (list 0) for val in (list -1) do (sethash hashtable key val)) hashtable) :hashsuppl-> (let ((hashtable (make-hash-table))) (loop for key in (list -1) for val in (list 0) do (sethash hashtable key val)) hashtable) :veclrs (make-array 1000 :initial-contents (eval-my-list (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :maxetat 0 :hashrepeats nil :lrsmode (quote t) :comparateur (quote compareevents) :name "improvizer" :context nil :continuity 0 :navigationmode (quote continuity) :currentstateidx 0 :prevstateidx -1 :max-continuity 1000 :start-region (list 0 0) :fwsuffix (quote t) :bwsuffix (quote t) :bestsuffixmode nil :refharmscen nil :harmscenlength 48 :beats/measure 4 :reftempo 536 :currenttranspo 0 :nexteventifnosolution (quote t) :lengthfactorsfromscen (list 0 0) :besttranspomode (quote t) :firstwithouttranspomode nil :authorizedtranspos (list -4 -3 -2 -1 1 2 3 4) :randomprefixoccurrencemode nil :newtabousperf nil :tabou-mode (quote t) :tabou (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :feature nil :hashlabeltranspo (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :from-file t)) (if (find-class (quote improvizer) nil) (make-instance (quote improvizer) :vectext (make-array 1000 :initial-contents (eval-my-list (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :hashtransition (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :hashsuppl (let ((hashtable (make-hash-table))) (loop for key in (list 0) for val in (list -1) do (sethash hashtable key val)) hashtable) :hashsuppl-> (let ((hashtable (make-hash-table))) (loop for key in (list -1) for val in (list 0) do (sethash hashtable key val)) hashtable) :veclrs (make-array 1000 :initial-contents (eval-my-list (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :maxetat 0 :hashrepeats nil :lrsmode (quote t) :comparateur (quote compareevents) :name "improvizer" :context nil :continuity 0 :navigationmode (quote continuity) :currentstateidx 0 :prevstateidx -1 :max-continuity 1000 :start-region (list 0 0) :fwsuffix (quote t) :bwsuffix (quote t) :bestsuffixmode nil :refharmscen nil :harmscenlength 48 :beats/measure 4 :reftempo 536 :currenttranspo 0 :nexteventifnosolution (quote t) :lengthfactorsfromscen (list 0 0) :besttranspomode (quote t) :firstwithouttranspomode nil :authorizedtranspos (list -4 -3 -2 -1 1 2 3 4) :randomprefixoccurrencemode nil :newtabousperf nil :tabou-mode (quote t) :tabou (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :feature nil :hashlabeltranspo (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :from-file t)) (if (find-class (quote improvizer) nil) (make-instance (quote improvizer) :vectext (make-array 1000 :initial-contents (eval-my-list (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :hashtransition (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :hashsuppl (let ((hashtable (make-hash-table))) (loop for key in (list 0) for val in (list -1) do (sethash hashtable key val)) hashtable) :hashsuppl-> (let ((hashtable (make-hash-table))) (loop for key in (list -1) for val in (list 0) do (sethash hashtable key val)) hashtable) :veclrs (make-array 1000 :initial-contents (eval-my-list (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :maxetat 0 :hashrepeats nil :lrsmode (quote t) :comparateur (quote compareevents) :name "improvizer" :context nil :continuity 0 :navigationmode (quote continuity) :currentstateidx 0 :prevstateidx -1 :max-continuity 1000 :start-region (list 0 0) :fwsuffix (quote t) :bwsuffix (quote t) :bestsuffixmode nil :refharmscen nil :harmscenlength 48 :beats/measure 4 :reftempo 536 :currenttranspo 0 :nexteventifnosolution (quote t) :lengthfactorsfromscen (list 0 0) :besttranspomode (quote t) :firstwithouttranspomode nil :authorizedtranspos (list -4 -3 -2 -1 1 2 3 4) :randomprefixoccurrencemode nil :newtabousperf nil :tabou-mode (quote t) :tabou (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :feature nil :hashlabeltranspo (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :from-file t)) (if (find-class (quote improvizer) nil) (make-instance (quote improvizer) :vectext (make-array 1000 :initial-contents (eval-my-list (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :hashtransition (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :hashsuppl (let ((hashtable (make-hash-table))) (loop for key in (list 0) for val in (list -1) do (sethash hashtable key val)) hashtable) :hashsuppl-> (let ((hashtable (make-hash-table))) (loop for key in (list -1) for val in (list 0) do (sethash hashtable key val)) hashtable) :veclrs (make-array 1000 :initial-contents (eval-my-list (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :maxetat 0 :hashrepeats nil :lrsmode (quote t) :comparateur (quote compareevents) :name "improvizer" :context nil :continuity 0 :navigationmode (quote continuity) :currentstateidx 0 :prevstateidx -1 :max-continuity 1000 :start-region (list 0 0) :fwsuffix (quote t) :bwsuffix (quote t) :bestsuffixmode nil :refharmscen nil :harmscenlength 48 :beats/measure 4 :reftempo 536 :currenttranspo 0 :nexteventifnosolution (quote t) :lengthfactorsfromscen (list 0 0) :besttranspomode (quote t) :firstwithouttranspomode nil :authorizedtranspos (list -4 -3 -2 -1 1 2 3 4) :randomprefixoccurrencemode nil :newtabousperf nil :tabou-mode (quote t) :tabou (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :feature nil :hashlabeltranspo (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :from-file t)) (if (find-class (quote improvizer) nil) (make-instance (quote improvizer) :vectext (make-array 1000 :initial-contents (eval-my-list (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :hashtransition (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :hashsuppl (let ((hashtable (make-hash-table))) (loop for key in (list 0) for val in (list -1) do (sethash hashtable key val)) hashtable) :hashsuppl-> (let ((hashtable (make-hash-table))) (loop for key in (list -1) for val in (list 0) do (sethash hashtable key val)) hashtable) :veclrs (make-array 1000 :initial-contents (eval-my-list (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :maxetat 0 :hashrepeats nil :lrsmode (quote t) :comparateur (quote compareevents) :name "improvizer" :context nil :continuity 0 :navigationmode (quote continuity) :currentstateidx 0 :prevstateidx -1 :max-continuity 1000 :start-region (list 0 0) :fwsuffix (quote t) :bwsuffix (quote t) :bestsuffixmode nil :refharmscen nil :harmscenlength 48 :beats/measure 4 :reftempo 536 :currenttranspo 0 :nexteventifnosolution (quote t) :lengthfactorsfromscen (list 0 0) :besttranspomode (quote t) :firstwithouttranspomode nil :authorizedtranspos (list -4 -3 -2 -1 1 2 3 4) :randomprefixoccurrencemode nil :newtabousperf nil :tabou-mode (quote t) :tabou (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :feature nil :hashlabeltranspo (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :from-file t))) do (sethash hashtable key val)) hashtable) :subfolder-for-live-oracles "" :improtable (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :grammar (if (find-class (quote steedmangrammar) nil) (make-instance (quote steedmangrammar) :rulelist (list (if (find-class (quote substitution) nil) (make-instance (quote substitution) :leftpart (list (list (quote x) (quote maj7))) :rightpart (list (list (quote x) (quote maj7)) (list (quote x) (quote maj7))) :rulename (quote i) :dividing (quote t) :marking nil :from-file t)) (if (find-class (quote substitution) nil) (make-instance (quote substitution) :leftpart (list (list (quote x) 7)) :rightpart (list (list (quote x) (quote maj7)) (list (quote x) 7)) :rulename (quote i7) :dividing (quote t) :marking nil :from-file t)) (if (find-class (quote substitution) nil) (make-instance (quote substitution) :leftpart (list (list (quote x) (quote m7))) :rightpart (list (list (quote x) (quote m7)) (list (quote x) (quote m7))) :rulename (quote im7) :dividing (quote t) :marking nil :from-file t)) (if (find-class (quote substitution) nil) (make-instance (quote substitution) :leftpart (list (quote w) (list (quote x) 7)) :rightpart (list (list (list (quote d) (quote x)) 7) (list (quote x) 7)) :rulename (quote v7-i7) :dividing nil :marking (quote t) :from-file t)) (if (find-class (quote substitution) nil) (make-instance (quote substitution) :leftpart (list (quote w) (list (quote x) (quote m7))) :rightpart (list (list (list (quote d) (quote x)) 7) (list (quote x) (quote m7))) :rulename (quote v7-im7) :dividing nil :marking (quote t) :from-file t)) (if (find-class (quote substitution) nil) (make-instance (quote substitution) :leftpart (list (quote w) (list (quote x) 7)) :rightpart (list (list (list (quote d) (quote x)) (quote m7)) (list (quote x) 7)) :rulename (quote iim7-v7) :dividing nil :marking (quote t) :from-file t)) (if (find-class (quote substitution) nil) (make-instance (quote substitution) :leftpart (list (list (list (quote d) (quote x)) 7) (list (quote x) 7)) :rightpart (list (list (list (quote stb) (quote x)) 7) (list (quote x) 7)) :rulename (quote iib7-i7) :dividing nil :marking (quote t) :from-file t)) (if (find-class (quote substitution) nil) (make-instance (quote substitution) :leftpart (list (list (list (quote d) (quote x)) 7) (list (quote x) (quote maj7))) :rightpart (list (list (list (quote stb) (quote x))) (list (quote x) (quote maj7))) :rulename (quote iib-i) :dividing nil :marking (quote t) :from-file t)) (if (find-class (quote substitution) nil) (make-instance (quote substitution) :leftpart (list (list (list (quote d) (quote x)) 7) (list (quote x) (quote m7))) :rightpart (list (list (list (quote stb) (quote x))) (list (quote x) (quote m7))) :rulename (quote iib-im7) :dividing nil :marking (quote t) :from-file t))) :threshold 1 :from-file t)) :voicings (list (list (list (quote b) (quote m7)) (list (list 47 57 61 62 64))) (list (list (quote e) 7) (list (list 40 56 60 62 67))) (list (list (quote a) (quote maj7)) (list (list 45 56 59 61 66))) (list (list (quote e) (quote m7)) (list (list 40 55 57 62 66))) (list (list (quote a) 7) (list (list 45 55 59 61 63 66))) (list (list (quote d) (quote maj7)) (list (list 38 54 57 61 64)))) :beatduration 429 :nbbeatspermeasure 4 :from-file t)) (quote t)) nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list" (quote list) (quote nil) (om-make-point 112 313) (om-make-point 77 30) (quote harmlabel) "harmlabel" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "EXPAND_GRID" (quote expand_grid) (quote ((om-load-inputfun (quote input-funbox) "GRID" "GRID" nil))) (om-make-point 32 297) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "MAKELABELSFROMLIST" (quote makelabelsfromlist) (quote ((om-load-inputfun (quote input-funbox) "L" "L" nil) (om-load-inputfun (quote input-funbox) "SPEC" "SPEC" nil))) (om-make-point 31 369) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "GRID" (quote grid) (quote ((om-load-inputfun (quote input-funbox) "TUNE" "TUNE" nil))) (om-make-point 59 226) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "BEATDURATION" (quote beatduration) (quote ((om-load-inputfun (quote input-funbox) "TUNE" "TUNE" nil))) (om-make-point 240 226) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxout "output 2" 1 (om-make-point 250 289) (quote ((om-load-inputfun (quote input-funbox) "" "out" nil))) "output 2" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxout "output" 0 (om-make-point 65 433) (quote ((om-load-inputfun (quote input-funbox) "" "out" nil))) nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "input" 0 (om-make-point 140 22) "" nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((6 0 1 0 nil 0) (0 0 1 3 nil 0) (1 0 2 0 nil 0) (11 0 3 0 nil 0) (7 0 5 0 nil 0) (5 0 6 0 nil 0) (4 0 6 1 nil 0) (3 0 7 0 nil 0) (3 0 8 0 nil 0) (8 0 9 0 nil 0) (6 0 10 0 nil 0))) 6.090012 nil "" (om-make-point 200 200) (om-make-point 500 400)) (quote ((om-load-inputfun (quote input-funbox) "" "input" nil) (om-load-inputfun (quote input-funbox) "" "input 2" 7657))) (om-make-point 12 135) nil (list (list (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote f) :chordtype (quote rien3) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote f) :chordtype (quote rien3) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote f) :chordtype (quote rien3) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype (quote deb) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7final) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7final) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype (quote 7final) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype (quote 7final) :from-file t))) 690 nil) nil "Load harm scenario"))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "IMPROVISATION-HANDLER" (quote improvisation-handler) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "" "name" "Improvizer-Handler") (om-load-inputfun (quote input-funbox) "" "rtimprovizer" nil) (om-load-inputfun (quote input-funbox) "" "scenario" nil) (om-load-inputfun (quote input-funbox) "" "label-class" (quote label)) (om-load-inputfun (quote input-funbox) "" "output-fun" (quote output-sequence)) (om-load-inputfun (quote input-funbox) "" "epsilon" 5) (om-load-inputfun (quote input-funbox) "" "target-object" nil))) (om-make-point 166 348) (om-make-point 233 144) (if (find-class (quote improvisation-handler) nil) (make-instance (quote improvisation-handler) :name "Improvizer-Handler" :rtimprovizer (if (find-class (quote realtimeimprovizer) nil) (make-instance (quote realtimeimprovizer) :vectext (make-array 1000 :initial-contents (eval-my-list (quote (nil (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype (quote deb) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 0 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 1 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 2 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 3 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 4 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 5 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 6 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 7 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 8 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 9 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 10 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 11 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 12 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 13 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 14 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 15 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 16 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 17 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 18 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 19 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 20 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 21 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 22 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 23 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 24 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 25 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 26 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 27 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 28 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 29 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 30 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 31 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 32 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 33 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 34 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 35 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 36 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 37 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 38 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 39 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 40 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 41 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 42 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 43 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 44 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 45 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 46 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 47 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 48 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 49 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 50 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 51 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 52 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 53 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 54 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 55 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 56 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 57 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 58 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 59 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 60 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 61 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 62 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 63 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 64 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 65 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 66 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 67 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 68 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 69 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 70 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 71 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 72 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 73 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 74 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 75 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 76 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 77 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 78 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 79 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 80 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 81 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 82 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 83 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 84 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 85 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 86 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 87 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 88 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 89 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 90 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 91 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 92 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 93 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 94 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 95 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 96 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 97 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 98 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 99 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 100 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 101 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 102 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 103 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 104 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 105 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 106 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 107 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 108 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 109 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 110 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 111 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 112 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 113 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 114 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 115 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 116 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 117 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 118 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 119 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 120 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 121 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 122 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 123 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 124 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 125 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 126 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 127 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 128 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 129 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 130 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 131 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 132 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 133 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 134 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 135 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 136 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 137 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 138 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 139 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 140 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 141 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 142 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 143 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 144 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 145 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 146 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 147 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 148 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 149 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 150 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 151 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 152 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 153 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 154 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 155 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 156 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 157 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 158 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 159 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 160 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 161 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 162 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 163 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 164 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 165 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 166 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 167 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 168 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 169 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 170 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 171 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 172 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 173 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 174 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 175 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 176 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 177 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 178 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 179 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 180 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 181 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote g\#) :chordtype (quote maj7) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 182 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 183 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 184 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7final) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 185 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7final) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 186 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype (quote 7final) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 187 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype (quote 7final) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 188 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote f) :chordtype (quote rien) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 189 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote f) :chordtype (quote rien2) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 190 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) (if (find-class (quote audioharmbeat) nil) (make-instance (quote audioharmbeat) :duration 690 :feature nil :numbeat 1 :label (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote f) :chordtype (quote rien3) :from-file t)) :relharmlabel nil :data (if (find-class (quote audiodata) nil) (make-instance (quote audiodata) :idxinbuffer 191 :datesinbuffer (list -1 -1) :currenttransfo 0 :currenttimestretchcoef 1 :initduration 690 :pathaudiofile "unknown path" :from-file t)) :from-file t)) nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :hashtransition (let ((hashtable (make-hash-table))) (loop for key in (listfor val in (list (list 192 191 190 188 186 6 4 2 1) (list 2) (list 4 3) (list 4) (list 186 10 6 5) (list 186 10 6) (list 8 7) (list 8) (list 9) (list 186 10) (list 11) (list 12) (list 13) (list 14) (list 15) (list 16) (list 17) (list 186 18) (list 19) (list 20) (list 21) (list 22) (list 23) (list 24) (list 25) (list 186 26) (list 27) (list 28) (list 29) (list 30) (list 31) (list 32) (list 33) (list 186 34) (list 35) (list 36) (list 37) (list 38) (list 39) (list 40) (list 41) (list 186 42) (list 43) (list 44) (list 45) (list 46) (list 47) (list 48) (list 49) (list 186 50) (list 51) (list 52) (list 53) (list 54) (list 55) (list 56) (list 57) (list 186 58) (list 59) (list 60) (list 61) (list 62) (list 63) (list 64) (list 65) (list 186 66) (list 67) (list 68) (list 69) (list 70) (list 71) (list 72) (list 73) (list 186 74) (list 75) (list 76) (list 77) (list 78) (list 79) (list 80) (list 81) (list 186 82) (list 83) (list 84) (list 85) (list 86) (list 87) (list 88) (list 89) (list 186 90) (list 91) (list 92) (list 93) (list 94) (list 95) (list 96) (list 97) (list 186 98) (list 99) (list 100) (list 101) (list 102) (list 103) (list 104) (list 105) (list 186 106) (list 107) (list 108) (list 109) (list 110) (list 111) (list 112) (list 113) (list 186 114) (list 115) (list 116) (list 117) (list 118) (list 119) (list 120) (list 121) (list 186 122) (list 123) (list 124) (list 125) (list 126) (list 127) (list 128) (list 129) (list 186 130) (list 131) (list 132) (list 133) (list 134) (list 135) (list 136) (list 137) (list 186 138) (list 139) (list 140) (list 141) (list 142) (list 143) (list 144) (list 145) (list 186 146) (list 147) (list 148) (list 149) (list 150) (list 151) (list 152) (list 153) (list 186 154) (list 155) (list 156) (list 157) (list 158) (list 159) (list 160) (list 161) (list 186 162) (list 163) (list 164) (list 165) (list 166) (list 167) (list 168) (list 169) (list 186 170) (list 171) (list 172) (list 173) (list 174) (list 175) (list 176) (list 177) (list 186 178) (list 179) (list 180) (list 181) (list 182) (list 183) (list 184) (list 185) (list 186) (list 188 187) (list 188) (list 190 189) (list 190) (list 191) (list 192)) do (sethash hashtable key val)) hashtable) :hashsuppl (let ((hashtable (make-hash-table))) (loop for key in (listfor val in (list -1 0 0 2 0 4 0 6 4 5 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 0 186 0 188 0 0 0) do (sethash hashtable key val)) hashtable) :hashsuppl-> (let ((hashtable (make-hash-table))) (loop for key in (listfor val in (listdo (sethash hashtable key val)) hashtable) :veclrs (make-array 1000 :initial-contents (eval-my-list (quote (nil 0 0 1 0 1 0 1 1 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 0 1 0 1 0 0 0 nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))) :maxetat 192 :hashrepeats nil :lrsmode (quote t) :comparateur (quote compareevents) :name "improvizer" :context nil :continuity 1 :navigationmode (quote nothing) :currentstateidx 192 :prevstateidx 192 :max-continuity 100 :start-region (list 0 192) :fwsuffix (quote t) :bwsuffix (quote t) :bestsuffixmode nil :refharmscen nil :harmscenlength 48 :beats/measure 4 :reftempo 690 :currenttranspo 0 :nexteventifnosolution nil :lengthfactorsfromscen (list 1 1000) :besttranspomode (quote t) :firstwithouttranspomode nil :authorizedtranspos (list -5 -4 -3 -2 -1 0 1 2 3 4 5) :randomprefixoccurrencemode (quote t) :newtabousperf nil :tabou-mode (quote t) :tabou (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :feature nil :hashlabeltranspo (let ((hashtable (make-hash-table))) (loop for key in nil for val in nil do (sethash hashtable key val)) hashtable) :currentimproidx 1 :startingpointnextphasefound? nil :improtrace (let ((hashtable (make-hash-table))) (loop for key in (list 0 1 2) for val in (list (list 0 0) (list 192 0) (list 192 0)) do (sethash hashtable key val)) hashtable) :modert nil :output nil :gen-callback nil :from-file t)) :scenario (list (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote f) :chordtype (quote rien3) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote f) :chordtype (quote rien3) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote f) :chordtype (quote rien3) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype (quote deb) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote ab) :chordtype (quote maj7) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype 7 :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7final) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote c) :chordtype (quote m7final) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype (quote 7final) :from-file t)) (if (find-class (quote harmlabel) nil) (make-instance (quote harmlabel) :root (quote bb) :chordtype (quote 7final) :from-file t))) :label-class (quote label) :output-fun nil :epsilon 5 :target-object nil :from-file t)) "x" nil (pairlis (quote (winsize winpos)) (list (om-make-point 250 280) (om-make-point 150 100))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((20 0 0 0 nil 0) (32 0 1 0 nil 0) (20 0 2 0 nil 0) (32 0 3 0 nil 0) (20 0 4 0 nil 0) (32 0 5 0 nil 0) (22 0 12 0 nil 0) (11 0 12 1 nil 0) (50 1 12 2 nil 0) (34 0 14 0 nil 0) (13 0 14 1 nil 0) (50 1 14 2 nil 0) (47 0 16 0 nil 0) (15 0 16 1 nil 0) (50 1 16 2 nil 0) (51 0 17 0 nil 0) (29 0 17 1 nil 0) (32 0 18 0 nil 0) (29 0 18 1 nil 0) (12 0 20 2 nil 0) (50 0 20 3 nil 0) (19 0 20 5 nil 0) (20 0 24 0 nil 0) (20 0 25 0 nil 0) (27 0 28 1 nil 0) (28 0 29 0 nil 0) (20 0 30 0 nil 0) (29 0 30 1 nil 0) (14 0 32 2 nil 0) (50 0 32 3 nil 0) (31 0 32 5 nil 0) (32 0 37 0 nil 0) (32 0 38 0 nil 0) (51 0 40 0 nil 0) (51 0 41 0 nil 0) (46 0 50 0 nil 0) (16 0 51 2 nil 0) (50 0 51 3 nil 0) (39 0 51 5 nil 0))) nil 6.090012))
